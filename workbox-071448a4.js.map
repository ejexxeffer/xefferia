{"version":3,"file":"workbox-071448a4.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/dontWaitFor.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/registerQuotaErrorCallback.js","node_modules/idb/build/wrap-idb-value.js","node_modules/idb/build/index.js","node_modules/workbox-expiration/_version.js","node_modules/workbox-expiration/models/CacheTimestampsModel.js","node_modules/workbox-expiration/CacheExpiration.js","node_modules/workbox-expiration/ExpirationPlugin.js","node_modules/workbox-background-sync/_version.js","node_modules/workbox-background-sync/lib/QueueDb.js","node_modules/workbox-background-sync/lib/QueueStore.js","node_modules/workbox-background-sync/lib/StorableRequest.js","node_modules/workbox-background-sync/Queue.js","node_modules/workbox-background-sync/BackgroundSyncPlugin.js","node_modules/workbox-cacheable-response/_version.js","node_modules/workbox-cacheable-response/CacheableResponse.js","node_modules/workbox-cacheable-response/CacheableResponsePlugin.js","node_modules/workbox-core/_private/timeout.js","node_modules/workbox-core/_private/resultingClientExists.js","node_modules/workbox-broadcast-update/_version.js","node_modules/workbox-broadcast-update/responsesAreSame.js","node_modules/workbox-broadcast-update/utils/constants.js","node_modules/workbox-broadcast-update/BroadcastCacheUpdate.js","node_modules/workbox-broadcast-update/BroadcastUpdatePlugin.js","node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","node_modules/workbox-core/_private/Deferred.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/StrategyHandler.js","node_modules/workbox-strategies/Strategy.js","node_modules/workbox-strategies/utils/messages.js","node_modules/workbox-strategies/CacheFirst.js","node_modules/workbox-navigation-preload/_version.js","node_modules/workbox-navigation-preload/isSupported.js","node_modules/workbox-navigation-preload/enable.js","node_modules/workbox-core/clientsClaim.js","node_modules/workbox-core/_private/waitUntil.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-precaching/PrecacheStrategy.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/PrecacheRoute.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js","node_modules/workbox-routing/NavigationRoute.js","node_modules/workbox-precaching/createHandlerBoundToURL.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.5.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production'\n    ? null\n    : (() => {\n        // Don't overwrite this value if it's already set.\n        // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n        if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n            self.__WB_DISABLE_DEV_LOGS = false;\n        }\n        let inGroup = false;\n        const methodToColorMap = {\n            debug: `#7f8c8d`,\n            log: `#2ecc71`,\n            warn: `#f39c12`,\n            error: `#c0392b`,\n            groupCollapsed: `#3498db`,\n            groupEnd: null, // No colored prefix on groupEnd\n        };\n        const print = function (method, args) {\n            if (self.__WB_DISABLE_DEV_LOGS) {\n                return;\n            }\n            if (method === 'groupCollapsed') {\n                // Safari doesn't print all console.groupCollapsed() arguments:\n                // https://bugs.webkit.org/show_bug.cgi?id=182754\n                if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                    console[method](...args);\n                    return;\n                }\n            }\n            const styles = [\n                `background: ${methodToColorMap[method]}`,\n                `border-radius: 0.5em`,\n                `color: white`,\n                `font-weight: bold`,\n                `padding: 2px 0.5em`,\n            ];\n            // When in a group, the workbox prefix is not displayed.\n            const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n            console[method](...logPrefix, ...args);\n            if (method === 'groupCollapsed') {\n                inGroup = true;\n            }\n            if (method === 'groupEnd') {\n                inGroup = false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const api = {};\n        const loggerMethods = Object.keys(methodToColorMap);\n        for (const key of loggerMethods) {\n            const method = key;\n            api[method] = (...args) => {\n                print(method, args);\n            };\n        }\n        return api;\n    })());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return (`The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`);\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`);\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName, }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}` +\n            `${funcName}()' must be of type ${expectedType}.`);\n    },\n    'incorrect-class': ({ expectedClassName, paramName, moduleName, className, funcName, isReturnValueProblem, }) => {\n        if (!expectedClassName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        if (isReturnValueProblem) {\n            return (`The return value from ` +\n                `'${moduleName}.${classNameStr}${funcName}()' ` +\n                `must be an instance of class ${expectedClassName}.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}${funcName}()' ` +\n            `must be an instance of class ${expectedClassName}.`);\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName, }) => {\n        if (!expectedMethod ||\n            !paramName ||\n            !moduleName ||\n            !className ||\n            !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return (`${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`);\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return (`An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`);\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` + `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`);\n    },\n    'plugin-error-request-will-fetch': ({ thrownErrorMessage }) => {\n        if (!thrownErrorMessage) {\n            throw new Error(`Unexpected input to ` + `'plugin-error-request-will-fetch', error.`);\n        }\n        return (`An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownErrorMessage}'.`);\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return (`You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`);\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return (`The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`);\n    },\n    'unregister-route-route-not-registered': () => {\n        return (`The route you're trying to unregister was not previously ` +\n            `registered.`);\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return (`The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`);\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return (`The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`);\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return (`The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`);\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName, }) => {\n        return (`The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`);\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return (`When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`);\n    },\n    'channel-name-required': () => {\n        return (`You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`);\n    },\n    'invalid-responses-are-same-args': () => {\n        return (`The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`);\n    },\n    'expire-custom-caches-only': () => {\n        return (`You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`);\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return (`The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`);\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return (`Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return (`The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return (`The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`);\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return (`Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`);\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return (`There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`);\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return (`The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`));\n    },\n    'non-precached-url': ({ url }) => {\n        return (`createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`);\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`);\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return (`workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`);\n    },\n    'opaque-streams-source': ({ type }) => {\n        const message = `One of the workbox-streams sources resulted in an ` +\n            `'${type}' response.`;\n        if (type === 'opaqueredirect') {\n            return (`${message} Please do not use a navigation request that results ` +\n                `in a redirect as a source.`);\n        }\n        return `${message} Please ensure your sources are CORS-enabled.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, \n// Need the general type to do the check later.\n// eslint-disable-next-line @typescript-eslint/ban-types\nexpectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClassName'] = expectedClass.name;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] = `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, \n// Need general type to do check later.\nexpectedClass, // eslint-disable-line\ndetails) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production'\n    ? null\n    : {\n        hasMethod,\n        isArray,\n        isInstance,\n        isOneOf,\n        isType,\n        isArrayOfClass,\n    };\nexport { finalAssertExports as assert };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.5.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * {@link workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * {@link workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if (url.origin !== location.origin && result.index !== 0) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a `FetchEvent` using one or more\n * {@link workbox-routing.Route}, responding with a `Response` if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            // event.data is type 'any'\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event, }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([`Found a route to handle this request:`, route]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`,\n                        params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise &&\n            (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        if (catchErr instanceof Error) {\n                            err = catchErr;\n                        }\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event, }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            // route.match returns type any, not possible to change right now.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do.\n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params = matchResult;\n                if (Array.isArray(params) && params.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if (matchResult.constructor === Object && // eslint-disable-line\n                    Object.keys(matchResult).length === 0) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call {@link workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {workbox-routing.Route} The generated `Route`.\n *\n * @memberof workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http')\n                ? captureUrl.pathname\n                : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (url.pathname === captureUrl.pathname &&\n                    url.origin !== captureUrl.origin) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    void promise.then(() => { });\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\n// Can't change Function type right now.\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof workbox-core\n */\n// Can't change Function type\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:6.5.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { openDB, deleteDB } from 'idb';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst CACHE_OBJECT_STORE = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._db = null;\n        this._cacheName = cacheName;\n    }\n    /**\n     * Performs an upgrade of indexedDB.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDb(db) {\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(CACHE_OBJECT_STORE, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n    }\n    /**\n     * Performs an upgrade of indexedDB and deletes deprecated DBs.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDbAndDeleteOldDbs(db) {\n        this._upgradeDb(db);\n        if (this._cacheName) {\n            void deleteDB(this._cacheName);\n        }\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        const db = await this.getDb();\n        const tx = db.transaction(CACHE_OBJECT_STORE, 'readwrite', {\n            durability: 'relaxed',\n        });\n        await tx.store.put(entry);\n        await tx.done;\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number | undefined}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const db = await this.getDb();\n        const entry = await db.get(CACHE_OBJECT_STORE, this._getId(url));\n        return entry === null || entry === void 0 ? void 0 : entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const db = await this.getDb();\n        let cursor = await db\n            .transaction(CACHE_OBJECT_STORE)\n            .store.index('timestamp')\n            .openCursor(null, 'prev');\n        const entriesToDelete = [];\n        let entriesNotDeletedCount = 0;\n        while (cursor) {\n            const result = cursor.value;\n            // TODO(philipwalton): once we can use a multi-key index, we\n            // won't have to check `cacheName` here.\n            if (result.cacheName === this._cacheName) {\n                // Delete an entry if it's older than the max age or\n                // if we already have the max number allowed.\n                if ((minTimestamp && result.timestamp < minTimestamp) ||\n                    (maxCount && entriesNotDeletedCount >= maxCount)) {\n                    // TODO(philipwalton): we should be able to delete the\n                    // entry right here, but doing so causes an iteration\n                    // bug in Safari stable (fixed in TP). Instead we can\n                    // store the keys of the entries to delete, and then\n                    // delete the separate transactions.\n                    // https://github.com/GoogleChrome/workbox/issues/1978\n                    // cursor.delete();\n                    // We only need to return the URL, not the whole entry.\n                    entriesToDelete.push(cursor.value);\n                }\n                else {\n                    entriesNotDeletedCount++;\n                }\n            }\n            cursor = await cursor.continue();\n        }\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await db.delete(CACHE_OBJECT_STORE, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n    /**\n     * Returns an open connection to the database.\n     *\n     * @private\n     */\n    async getDb() {\n        if (!this._db) {\n            this._db = await openDB(DB_NAME, 1, {\n                upgrade: this._upgradeDbAndDeleteOldDbs.bind(this),\n            });\n        }\n        return this._db;\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._matchOptions = config.matchOptions;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds\n            ? Date.now() - this._maxAgeSeconds * 1000\n            : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url, this._matchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ? 'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - this._maxAgeSeconds * 1000;\n            return timestamp !== undefined ? timestamp < expireOlderThan : true;\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in a `workbox-strategy` to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * It can only be used with `workbox-strategy` instances that have a\n * [custom `cacheName` property set](/web/tools/workbox/guides/configure-workbox#custom_cache_names_in_strategies).\n * In other words, it can't be used to expire entries in strategy that uses the\n * default runtime cache name.\n *\n * Whenever a cached response is used or updated, this plugin will look\n * at the associated cache and remove any old or extra responses.\n *\n * When using `maxAgeSeconds`, responses may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached response has been used. If the response has a \"Date\" header, then\n * a light weight expiration check is performed and the response will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {ExpirationPluginOptions} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse, }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request, }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - this._maxAgeSeconds * 1000;\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:background-sync:6.5.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2021 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { openDB } from 'idb';\nimport '../_version.js';\nconst DB_VERSION = 3;\nconst DB_NAME = 'workbox-background-sync';\nconst REQUEST_OBJECT_STORE_NAME = 'requests';\nconst QUEUE_NAME_INDEX = 'queueName';\n/**\n * A class to interact directly an IndexedDB created specifically to save and\n * retrieve QueueStoreEntries. This class encapsulates all the schema details\n * to store the representation of a Queue.\n *\n * @private\n */\nexport class QueueDb {\n    constructor() {\n        this._db = null;\n    }\n    /**\n     * Add QueueStoreEntry to underlying db.\n     *\n     * @param {UnidentifiedQueueStoreEntry} entry\n     */\n    async addEntry(entry) {\n        const db = await this.getDb();\n        const tx = db.transaction(REQUEST_OBJECT_STORE_NAME, 'readwrite', {\n            durability: 'relaxed',\n        });\n        await tx.store.add(entry);\n        await tx.done;\n    }\n    /**\n     * Returns the first entry id in the ObjectStore.\n     *\n     * @return {number | undefined}\n     */\n    async getFirstEntryId() {\n        const db = await this.getDb();\n        const cursor = await db\n            .transaction(REQUEST_OBJECT_STORE_NAME)\n            .store.openCursor();\n        return cursor === null || cursor === void 0 ? void 0 : cursor.value.id;\n    }\n    /**\n     * Get all the entries filtered by index\n     *\n     * @param queueName\n     * @return {Promise<QueueStoreEntry[]>}\n     */\n    async getAllEntriesByQueueName(queueName) {\n        const db = await this.getDb();\n        const results = await db.getAllFromIndex(REQUEST_OBJECT_STORE_NAME, QUEUE_NAME_INDEX, IDBKeyRange.only(queueName));\n        return results ? results : new Array();\n    }\n    /**\n     * Returns the number of entries filtered by index\n     *\n     * @param queueName\n     * @return {Promise<number>}\n     */\n    async getEntryCountByQueueName(queueName) {\n        const db = await this.getDb();\n        return db.countFromIndex(REQUEST_OBJECT_STORE_NAME, QUEUE_NAME_INDEX, IDBKeyRange.only(queueName));\n    }\n    /**\n     * Deletes a single entry by id.\n     *\n     * @param {number} id the id of the entry to be deleted\n     */\n    async deleteEntry(id) {\n        const db = await this.getDb();\n        await db.delete(REQUEST_OBJECT_STORE_NAME, id);\n    }\n    /**\n     *\n     * @param queueName\n     * @returns {Promise<QueueStoreEntry | undefined>}\n     */\n    async getFirstEntryByQueueName(queueName) {\n        return await this.getEndEntryFromIndex(IDBKeyRange.only(queueName), 'next');\n    }\n    /**\n     *\n     * @param queueName\n     * @returns {Promise<QueueStoreEntry | undefined>}\n     */\n    async getLastEntryByQueueName(queueName) {\n        return await this.getEndEntryFromIndex(IDBKeyRange.only(queueName), 'prev');\n    }\n    /**\n     * Returns either the first or the last entries, depending on direction.\n     * Filtered by index.\n     *\n     * @param {IDBCursorDirection} direction\n     * @param {IDBKeyRange} query\n     * @return {Promise<QueueStoreEntry | undefined>}\n     * @private\n     */\n    async getEndEntryFromIndex(query, direction) {\n        const db = await this.getDb();\n        const cursor = await db\n            .transaction(REQUEST_OBJECT_STORE_NAME)\n            .store.index(QUEUE_NAME_INDEX)\n            .openCursor(query, direction);\n        return cursor === null || cursor === void 0 ? void 0 : cursor.value;\n    }\n    /**\n     * Returns an open connection to the database.\n     *\n     * @private\n     */\n    async getDb() {\n        if (!this._db) {\n            this._db = await openDB(DB_NAME, DB_VERSION, {\n                upgrade: this._upgradeDb,\n            });\n        }\n        return this._db;\n    }\n    /**\n     * Upgrades QueueDB\n     *\n     * @param {IDBPDatabase<QueueDBSchema>} db\n     * @param {number} oldVersion\n     * @private\n     */\n    _upgradeDb(db, oldVersion) {\n        if (oldVersion > 0 && oldVersion < DB_VERSION) {\n            if (db.objectStoreNames.contains(REQUEST_OBJECT_STORE_NAME)) {\n                db.deleteObjectStore(REQUEST_OBJECT_STORE_NAME);\n            }\n        }\n        const objStore = db.createObjectStore(REQUEST_OBJECT_STORE_NAME, {\n            autoIncrement: true,\n            keyPath: 'id',\n        });\n        objStore.createIndex(QUEUE_NAME_INDEX, QUEUE_NAME_INDEX, { unique: false });\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { QueueDb, } from './QueueDb.js';\nimport '../_version.js';\n/**\n * A class to manage storing requests from a Queue in IndexedDB,\n * indexed by their queue name for easier access.\n *\n * Most developers will not need to access this class directly;\n * it is exposed for advanced use cases.\n */\nexport class QueueStore {\n    /**\n     * Associates this instance with a Queue instance, so entries added can be\n     * identified by their queue name.\n     *\n     * @param {string} queueName\n     */\n    constructor(queueName) {\n        this._queueName = queueName;\n        this._queueDb = new QueueDb();\n    }\n    /**\n     * Append an entry last in the queue.\n     *\n     * @param {Object} entry\n     * @param {Object} entry.requestData\n     * @param {number} [entry.timestamp]\n     * @param {Object} [entry.metadata]\n     */\n    async pushEntry(entry) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(entry, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'QueueStore',\n                funcName: 'pushEntry',\n                paramName: 'entry',\n            });\n            assert.isType(entry.requestData, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'QueueStore',\n                funcName: 'pushEntry',\n                paramName: 'entry.requestData',\n            });\n        }\n        // Don't specify an ID since one is automatically generated.\n        delete entry.id;\n        entry.queueName = this._queueName;\n        await this._queueDb.addEntry(entry);\n    }\n    /**\n     * Prepend an entry first in the queue.\n     *\n     * @param {Object} entry\n     * @param {Object} entry.requestData\n     * @param {number} [entry.timestamp]\n     * @param {Object} [entry.metadata]\n     */\n    async unshiftEntry(entry) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(entry, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'QueueStore',\n                funcName: 'unshiftEntry',\n                paramName: 'entry',\n            });\n            assert.isType(entry.requestData, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'QueueStore',\n                funcName: 'unshiftEntry',\n                paramName: 'entry.requestData',\n            });\n        }\n        const firstId = await this._queueDb.getFirstEntryId();\n        if (firstId) {\n            // Pick an ID one less than the lowest ID in the object store.\n            entry.id = firstId - 1;\n        }\n        else {\n            // Otherwise let the auto-incrementor assign the ID.\n            delete entry.id;\n        }\n        entry.queueName = this._queueName;\n        await this._queueDb.addEntry(entry);\n    }\n    /**\n     * Removes and returns the last entry in the queue matching the `queueName`.\n     *\n     * @return {Promise<QueueStoreEntry|undefined>}\n     */\n    async popEntry() {\n        return this._removeEntry(await this._queueDb.getLastEntryByQueueName(this._queueName));\n    }\n    /**\n     * Removes and returns the first entry in the queue matching the `queueName`.\n     *\n     * @return {Promise<QueueStoreEntry|undefined>}\n     */\n    async shiftEntry() {\n        return this._removeEntry(await this._queueDb.getFirstEntryByQueueName(this._queueName));\n    }\n    /**\n     * Returns all entries in the store matching the `queueName`.\n     *\n     * @param {Object} options See {@link workbox-background-sync.Queue~getAll}\n     * @return {Promise<Array<Object>>}\n     */\n    async getAll() {\n        return await this._queueDb.getAllEntriesByQueueName(this._queueName);\n    }\n    /**\n     * Returns the number of entries in the store matching the `queueName`.\n     *\n     * @param {Object} options See {@link workbox-background-sync.Queue~size}\n     * @return {Promise<number>}\n     */\n    async size() {\n        return await this._queueDb.getEntryCountByQueueName(this._queueName);\n    }\n    /**\n     * Deletes the entry for the given ID.\n     *\n     * WARNING: this method does not ensure the deleted entry belongs to this\n     * queue (i.e. matches the `queueName`). But this limitation is acceptable\n     * as this class is not publicly exposed. An additional check would make\n     * this method slower than it needs to be.\n     *\n     * @param {number} id\n     */\n    async deleteEntry(id) {\n        await this._queueDb.deleteEntry(id);\n    }\n    /**\n     * Removes and returns the first or last entry in the queue (based on the\n     * `direction` argument) matching the `queueName`.\n     *\n     * @return {Promise<QueueStoreEntry|undefined>}\n     * @private\n     */\n    async _removeEntry(entry) {\n        if (entry) {\n            await this.deleteEntry(entry.id);\n        }\n        return entry;\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\nconst serializableProperties = [\n    'method',\n    'referrer',\n    'referrerPolicy',\n    'mode',\n    'credentials',\n    'cache',\n    'redirect',\n    'integrity',\n    'keepalive',\n];\n/**\n * A class to make it easier to serialize and de-serialize requests so they\n * can be stored in IndexedDB.\n *\n * Most developers will not need to access this class directly;\n * it is exposed for advanced use cases.\n */\nclass StorableRequest {\n    /**\n     * Accepts an object of request data that can be used to construct a\n     * `Request` but can also be stored in IndexedDB.\n     *\n     * @param {Object} requestData An object of request data that includes the\n     *     `url` plus any relevant properties of\n     *     [requestInit]{@link https://fetch.spec.whatwg.org/#requestinit}.\n     */\n    constructor(requestData) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(requestData, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'StorableRequest',\n                funcName: 'constructor',\n                paramName: 'requestData',\n            });\n            assert.isType(requestData.url, 'string', {\n                moduleName: 'workbox-background-sync',\n                className: 'StorableRequest',\n                funcName: 'constructor',\n                paramName: 'requestData.url',\n            });\n        }\n        // If the request's mode is `navigate`, convert it to `same-origin` since\n        // navigation requests can't be constructed via script.\n        if (requestData['mode'] === 'navigate') {\n            requestData['mode'] = 'same-origin';\n        }\n        this._requestData = requestData;\n    }\n    /**\n     * Converts a Request object to a plain object that can be structured\n     * cloned or JSON-stringified.\n     *\n     * @param {Request} request\n     * @return {Promise<StorableRequest>}\n     */\n    static async fromRequest(request) {\n        const requestData = {\n            url: request.url,\n            headers: {},\n        };\n        // Set the body if present.\n        if (request.method !== 'GET') {\n            // Use ArrayBuffer to support non-text request bodies.\n            // NOTE: we can't use Blobs becuse Safari doesn't support storing\n            // Blobs in IndexedDB in some cases:\n            // https://github.com/dfahlander/Dexie.js/issues/618#issuecomment-398348457\n            requestData.body = await request.clone().arrayBuffer();\n        }\n        // Convert the headers from an iterable to an object.\n        for (const [key, value] of request.headers.entries()) {\n            requestData.headers[key] = value;\n        }\n        // Add all other serializable request properties\n        for (const prop of serializableProperties) {\n            if (request[prop] !== undefined) {\n                requestData[prop] = request[prop];\n            }\n        }\n        return new StorableRequest(requestData);\n    }\n    /**\n     * Returns a deep clone of the instances `_requestData` object.\n     *\n     * @return {Object}\n     */\n    toObject() {\n        const requestData = Object.assign({}, this._requestData);\n        requestData.headers = Object.assign({}, this._requestData.headers);\n        if (requestData.body) {\n            requestData.body = requestData.body.slice(0);\n        }\n        return requestData;\n    }\n    /**\n     * Converts this instance to a Request.\n     *\n     * @return {Request}\n     */\n    toRequest() {\n        return new Request(this._requestData.url, this._requestData);\n    }\n    /**\n     * Creates and returns a deep clone of the instance.\n     *\n     * @return {StorableRequest}\n     */\n    clone() {\n        return new StorableRequest(this.toObject());\n    }\n}\nexport { StorableRequest };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { QueueStore } from './lib/QueueStore.js';\nimport { StorableRequest } from './lib/StorableRequest.js';\nimport './_version.js';\nconst TAG_PREFIX = 'workbox-background-sync';\nconst MAX_RETENTION_TIME = 60 * 24 * 7; // 7 days in minutes\nconst queueNames = new Set();\n/**\n * Converts a QueueStore entry into the format exposed by Queue. This entails\n * converting the request data into a real request and omitting the `id` and\n * `queueName` properties.\n *\n * @param {UnidentifiedQueueStoreEntry} queueStoreEntry\n * @return {Queue}\n * @private\n */\nconst convertEntry = (queueStoreEntry) => {\n    const queueEntry = {\n        request: new StorableRequest(queueStoreEntry.requestData).toRequest(),\n        timestamp: queueStoreEntry.timestamp,\n    };\n    if (queueStoreEntry.metadata) {\n        queueEntry.metadata = queueStoreEntry.metadata;\n    }\n    return queueEntry;\n};\n/**\n * A class to manage storing failed requests in IndexedDB and retrying them\n * later. All parts of the storing and replaying process are observable via\n * callbacks.\n *\n * @memberof workbox-background-sync\n */\nclass Queue {\n    /**\n     * Creates an instance of Queue with the given options\n     *\n     * @param {string} name The unique name for this queue. This name must be\n     *     unique as it's used to register sync events and store requests\n     *     in IndexedDB specific to this instance. An error will be thrown if\n     *     a duplicate name is detected.\n     * @param {Object} [options]\n     * @param {Function} [options.onSync] A function that gets invoked whenever\n     *     the 'sync' event fires. The function is invoked with an object\n     *     containing the `queue` property (referencing this instance), and you\n     *     can use the callback to customize the replay behavior of the queue.\n     *     When not set the `replayRequests()` method is called.\n     *     Note: if the replay fails after a sync event, make sure you throw an\n     *     error, so the browser knows to retry the sync event later.\n     * @param {number} [options.maxRetentionTime=7 days] The amount of time (in\n     *     minutes) a request may be retried. After this amount of time has\n     *     passed, the request will be deleted from the queue.\n     * @param {boolean} [options.forceSyncFallback=false] If `true`, instead\n     *     of attempting to use background sync events, always attempt to replay\n     *     queued request at service worker startup. Most folks will not need\n     *     this, unless you explicitly target a runtime like Electron that\n     *     exposes the interfaces for background sync, but does not have a working\n     *     implementation.\n     */\n    constructor(name, { forceSyncFallback, onSync, maxRetentionTime } = {}) {\n        this._syncInProgress = false;\n        this._requestsAddedDuringSync = false;\n        // Ensure the store name is not already being used\n        if (queueNames.has(name)) {\n            throw new WorkboxError('duplicate-queue-name', { name });\n        }\n        else {\n            queueNames.add(name);\n        }\n        this._name = name;\n        this._onSync = onSync || this.replayRequests;\n        this._maxRetentionTime = maxRetentionTime || MAX_RETENTION_TIME;\n        this._forceSyncFallback = Boolean(forceSyncFallback);\n        this._queueStore = new QueueStore(this._name);\n        this._addSyncListener();\n    }\n    /**\n     * @return {string}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Stores the passed request in IndexedDB (with its timestamp and any\n     * metadata) at the end of the queue.\n     *\n     * @param {QueueEntry} entry\n     * @param {Request} entry.request The request to store in the queue.\n     * @param {Object} [entry.metadata] Any metadata you want associated with the\n     *     stored request. When requests are replayed you'll have access to this\n     *     metadata object in case you need to modify the request beforehand.\n     * @param {number} [entry.timestamp] The timestamp (Epoch time in\n     *     milliseconds) when the request was first added to the queue. This is\n     *     used along with `maxRetentionTime` to remove outdated requests. In\n     *     general you don't need to set this value, as it's automatically set\n     *     for you (defaulting to `Date.now()`), but you can update it if you\n     *     don't want particular requests to expire.\n     */\n    async pushRequest(entry) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(entry, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'Queue',\n                funcName: 'pushRequest',\n                paramName: 'entry',\n            });\n            assert.isInstance(entry.request, Request, {\n                moduleName: 'workbox-background-sync',\n                className: 'Queue',\n                funcName: 'pushRequest',\n                paramName: 'entry.request',\n            });\n        }\n        await this._addRequest(entry, 'push');\n    }\n    /**\n     * Stores the passed request in IndexedDB (with its timestamp and any\n     * metadata) at the beginning of the queue.\n     *\n     * @param {QueueEntry} entry\n     * @param {Request} entry.request The request to store in the queue.\n     * @param {Object} [entry.metadata] Any metadata you want associated with the\n     *     stored request. When requests are replayed you'll have access to this\n     *     metadata object in case you need to modify the request beforehand.\n     * @param {number} [entry.timestamp] The timestamp (Epoch time in\n     *     milliseconds) when the request was first added to the queue. This is\n     *     used along with `maxRetentionTime` to remove outdated requests. In\n     *     general you don't need to set this value, as it's automatically set\n     *     for you (defaulting to `Date.now()`), but you can update it if you\n     *     don't want particular requests to expire.\n     */\n    async unshiftRequest(entry) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(entry, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'Queue',\n                funcName: 'unshiftRequest',\n                paramName: 'entry',\n            });\n            assert.isInstance(entry.request, Request, {\n                moduleName: 'workbox-background-sync',\n                className: 'Queue',\n                funcName: 'unshiftRequest',\n                paramName: 'entry.request',\n            });\n        }\n        await this._addRequest(entry, 'unshift');\n    }\n    /**\n     * Removes and returns the last request in the queue (along with its\n     * timestamp and any metadata). The returned object takes the form:\n     * `{request, timestamp, metadata}`.\n     *\n     * @return {Promise<QueueEntry | undefined>}\n     */\n    async popRequest() {\n        return this._removeRequest('pop');\n    }\n    /**\n     * Removes and returns the first request in the queue (along with its\n     * timestamp and any metadata). The returned object takes the form:\n     * `{request, timestamp, metadata}`.\n     *\n     * @return {Promise<QueueEntry | undefined>}\n     */\n    async shiftRequest() {\n        return this._removeRequest('shift');\n    }\n    /**\n     * Returns all the entries that have not expired (per `maxRetentionTime`).\n     * Any expired entries are removed from the queue.\n     *\n     * @return {Promise<Array<QueueEntry>>}\n     */\n    async getAll() {\n        const allEntries = await this._queueStore.getAll();\n        const now = Date.now();\n        const unexpiredEntries = [];\n        for (const entry of allEntries) {\n            // Ignore requests older than maxRetentionTime. Call this function\n            // recursively until an unexpired request is found.\n            const maxRetentionTimeInMs = this._maxRetentionTime * 60 * 1000;\n            if (now - entry.timestamp > maxRetentionTimeInMs) {\n                await this._queueStore.deleteEntry(entry.id);\n            }\n            else {\n                unexpiredEntries.push(convertEntry(entry));\n            }\n        }\n        return unexpiredEntries;\n    }\n    /**\n     * Returns the number of entries present in the queue.\n     * Note that expired entries (per `maxRetentionTime`) are also included in this count.\n     *\n     * @return {Promise<number>}\n     */\n    async size() {\n        return await this._queueStore.size();\n    }\n    /**\n     * Adds the entry to the QueueStore and registers for a sync event.\n     *\n     * @param {Object} entry\n     * @param {Request} entry.request\n     * @param {Object} [entry.metadata]\n     * @param {number} [entry.timestamp=Date.now()]\n     * @param {string} operation ('push' or 'unshift')\n     * @private\n     */\n    async _addRequest({ request, metadata, timestamp = Date.now() }, operation) {\n        const storableRequest = await StorableRequest.fromRequest(request.clone());\n        const entry = {\n            requestData: storableRequest.toObject(),\n            timestamp,\n        };\n        // Only include metadata if it's present.\n        if (metadata) {\n            entry.metadata = metadata;\n        }\n        switch (operation) {\n            case 'push':\n                await this._queueStore.pushEntry(entry);\n                break;\n            case 'unshift':\n                await this._queueStore.unshiftEntry(entry);\n                break;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`Request for '${getFriendlyURL(request.url)}' has ` +\n                `been added to background sync queue '${this._name}'.`);\n        }\n        // Don't register for a sync if we're in the middle of a sync. Instead,\n        // we wait until the sync is complete and call register if\n        // `this._requestsAddedDuringSync` is true.\n        if (this._syncInProgress) {\n            this._requestsAddedDuringSync = true;\n        }\n        else {\n            await this.registerSync();\n        }\n    }\n    /**\n     * Removes and returns the first or last (depending on `operation`) entry\n     * from the QueueStore that's not older than the `maxRetentionTime`.\n     *\n     * @param {string} operation ('pop' or 'shift')\n     * @return {Object|undefined}\n     * @private\n     */\n    async _removeRequest(operation) {\n        const now = Date.now();\n        let entry;\n        switch (operation) {\n            case 'pop':\n                entry = await this._queueStore.popEntry();\n                break;\n            case 'shift':\n                entry = await this._queueStore.shiftEntry();\n                break;\n        }\n        if (entry) {\n            // Ignore requests older than maxRetentionTime. Call this function\n            // recursively until an unexpired request is found.\n            const maxRetentionTimeInMs = this._maxRetentionTime * 60 * 1000;\n            if (now - entry.timestamp > maxRetentionTimeInMs) {\n                return this._removeRequest(operation);\n            }\n            return convertEntry(entry);\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Loops through each request in the queue and attempts to re-fetch it.\n     * If any request fails to re-fetch, it's put back in the same position in\n     * the queue (which registers a retry for the next sync event).\n     */\n    async replayRequests() {\n        let entry;\n        while ((entry = await this.shiftRequest())) {\n            try {\n                await fetch(entry.request.clone());\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Request for '${getFriendlyURL(entry.request.url)}' ` +\n                        `has been replayed in queue '${this._name}'`);\n                }\n            }\n            catch (error) {\n                await this.unshiftRequest(entry);\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Request for '${getFriendlyURL(entry.request.url)}' ` +\n                        `failed to replay, putting it back in queue '${this._name}'`);\n                }\n                throw new WorkboxError('queue-replay-failed', { name: this._name });\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`All requests in queue '${this.name}' have successfully ` +\n                `replayed; the queue is now empty!`);\n        }\n    }\n    /**\n     * Registers a sync event with a tag unique to this instance.\n     */\n    async registerSync() {\n        // See https://github.com/GoogleChrome/workbox/issues/2393\n        if ('sync' in self.registration && !this._forceSyncFallback) {\n            try {\n                await self.registration.sync.register(`${TAG_PREFIX}:${this._name}`);\n            }\n            catch (err) {\n                // This means the registration failed for some reason, possibly due to\n                // the user disabling it.\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to register sync event for '${this._name}'.`, err);\n                }\n            }\n        }\n    }\n    /**\n     * In sync-supporting browsers, this adds a listener for the sync event.\n     * In non-sync-supporting browsers, or if _forceSyncFallback is true, this\n     * will retry the queue on service worker startup.\n     *\n     * @private\n     */\n    _addSyncListener() {\n        // See https://github.com/GoogleChrome/workbox/issues/2393\n        if ('sync' in self.registration && !this._forceSyncFallback) {\n            self.addEventListener('sync', (event) => {\n                if (event.tag === `${TAG_PREFIX}:${this._name}`) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.log(`Background sync for tag '${event.tag}' ` + `has been received`);\n                    }\n                    const syncComplete = async () => {\n                        this._syncInProgress = true;\n                        let syncError;\n                        try {\n                            await this._onSync({ queue: this });\n                        }\n                        catch (error) {\n                            if (error instanceof Error) {\n                                syncError = error;\n                                // Rethrow the error. Note: the logic in the finally clause\n                                // will run before this gets rethrown.\n                                throw syncError;\n                            }\n                        }\n                        finally {\n                            // New items may have been added to the queue during the sync,\n                            // so we need to register for a new sync if that's happened...\n                            // Unless there was an error during the sync, in which\n                            // case the browser will automatically retry later, as long\n                            // as `event.lastChance` is not true.\n                            if (this._requestsAddedDuringSync &&\n                                !(syncError && !event.lastChance)) {\n                                await this.registerSync();\n                            }\n                            this._syncInProgress = false;\n                            this._requestsAddedDuringSync = false;\n                        }\n                    };\n                    event.waitUntil(syncComplete());\n                }\n            });\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Background sync replaying without background sync event`);\n            }\n            // If the browser doesn't support background sync, or the developer has\n            // opted-in to not using it, retry every time the service worker starts up\n            // as a fallback.\n            void this._onSync({ queue: this });\n        }\n    }\n    /**\n     * Returns the set of queue names. This is primarily used to reset the list\n     * of queue names in tests.\n     *\n     * @return {Set<string>}\n     *\n     * @private\n     */\n    static get _queueNames() {\n        return queueNames;\n    }\n}\nexport { Queue };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Queue } from './Queue.js';\nimport './_version.js';\n/**\n * A class implementing the `fetchDidFail` lifecycle callback. This makes it\n * easier to add failed requests to a background sync Queue.\n *\n * @memberof workbox-background-sync\n */\nclass BackgroundSyncPlugin {\n    /**\n     * @param {string} name See the {@link workbox-background-sync.Queue}\n     *     documentation for parameter details.\n     * @param {Object} [options] See the\n     *     {@link workbox-background-sync.Queue} documentation for\n     *     parameter details.\n     */\n    constructor(name, options) {\n        /**\n         * @param {Object} options\n         * @param {Request} options.request\n         * @private\n         */\n        this.fetchDidFail = async ({ request }) => {\n            await this._queue.pushRequest({ request });\n        };\n        this._queue = new Queue(name, options);\n    }\n}\nexport { BackgroundSyncPlugin };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:cacheable-response:6.5.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * This class allows you to set up rules determining what\n * status codes and/or headers need to be present in order for a\n * [`Response`](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n * to be considered cacheable.\n *\n * @memberof workbox-cacheable-response\n */\nclass CacheableResponse {\n    /**\n     * To construct a new CacheableResponse instance you must provide at least\n     * one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.statuses || config.headers)) {\n                throw new WorkboxError('statuses-or-headers-required', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.statuses) {\n                assert.isArray(config.statuses, {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.statuses',\n                });\n            }\n            if (config.headers) {\n                assert.isType(config.headers, 'object', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.headers',\n                });\n            }\n        }\n        this._statuses = config.statuses;\n        this._headers = config.headers;\n    }\n    /**\n     * Checks a response to see whether it's cacheable or not, based on this\n     * object's configuration.\n     *\n     * @param {Response} response The response whose cacheability is being\n     * checked.\n     * @return {boolean} `true` if the `Response` is cacheable, and `false`\n     * otherwise.\n     */\n    isResponseCacheable(response) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(response, Response, {\n                moduleName: 'workbox-cacheable-response',\n                className: 'CacheableResponse',\n                funcName: 'isResponseCacheable',\n                paramName: 'response',\n            });\n        }\n        let cacheable = true;\n        if (this._statuses) {\n            cacheable = this._statuses.includes(response.status);\n        }\n        if (this._headers && cacheable) {\n            cacheable = Object.keys(this._headers).some((headerName) => {\n                return response.headers.get(headerName) === this._headers[headerName];\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (!cacheable) {\n                logger.groupCollapsed(`The request for ` +\n                    `'${getFriendlyURL(response.url)}' returned a response that does ` +\n                    `not meet the criteria for being cached.`);\n                logger.groupCollapsed(`View cacheability criteria here.`);\n                logger.log(`Cacheable statuses: ` + JSON.stringify(this._statuses));\n                logger.log(`Cacheable headers: ` + JSON.stringify(this._headers, null, 2));\n                logger.groupEnd();\n                const logFriendlyHeaders = {};\n                response.headers.forEach((value, key) => {\n                    logFriendlyHeaders[key] = value;\n                });\n                logger.groupCollapsed(`View response status and headers here.`);\n                logger.log(`Response status: ${response.status}`);\n                logger.log(`Response headers: ` + JSON.stringify(logFriendlyHeaders, null, 2));\n                logger.groupEnd();\n                logger.groupCollapsed(`View full response details here.`);\n                logger.log(response.headers);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n            }\n        }\n        return cacheable;\n    }\n}\nexport { CacheableResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse, } from './CacheableResponse.js';\nimport './_version.js';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof workbox-cacheable-response\n */\nclass CacheableResponsePlugin {\n    /**\n     * To construct a new CacheableResponsePlugin instance you must provide at\n     * least one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config) {\n        /**\n         * @param {Object} options\n         * @param {Response} options.response\n         * @return {Response|null}\n         * @private\n         */\n        this.cacheWillUpdate = async ({ response }) => {\n            if (this._cacheableResponse.isResponseCacheable(response)) {\n                return response;\n            }\n            return null;\n        };\n        this._cacheableResponse = new CacheableResponse(config);\n    }\n}\nexport { CacheableResponsePlugin };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { timeout } from './timeout.js';\nimport '../_version.js';\nconst MAX_RETRY_TIME = 2000;\n/**\n * Returns a promise that resolves to a window client matching the passed\n * `resultingClientId`. For browsers that don't support `resultingClientId`\n * or if waiting for the resulting client to apper takes too long, resolve to\n * `undefined`.\n *\n * @param {string} [resultingClientId]\n * @return {Promise<Client|undefined>}\n * @private\n */\nexport async function resultingClientExists(resultingClientId) {\n    if (!resultingClientId) {\n        return;\n    }\n    let existingWindows = await self.clients.matchAll({ type: 'window' });\n    const existingWindowIds = new Set(existingWindows.map((w) => w.id));\n    let resultingWindow;\n    const startTime = performance.now();\n    // Only wait up to `MAX_RETRY_TIME` to find a matching client.\n    while (performance.now() - startTime < MAX_RETRY_TIME) {\n        existingWindows = await self.clients.matchAll({ type: 'window' });\n        resultingWindow = existingWindows.find((w) => {\n            if (resultingClientId) {\n                // If we have a `resultingClientId`, we can match on that.\n                return w.id === resultingClientId;\n            }\n            else {\n                // Otherwise match on finding a window not in `existingWindowIds`.\n                return !existingWindowIds.has(w.id);\n            }\n        });\n        if (resultingWindow) {\n            break;\n        }\n        // Sleep for 100ms and retry.\n        await timeout(100);\n    }\n    return resultingWindow;\n}\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:broadcast-update:6.5.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * Given two `Response's`, compares several header values to see if they are\n * the same or not.\n *\n * @param {Response} firstResponse\n * @param {Response} secondResponse\n * @param {Array<string>} headersToCheck\n * @return {boolean}\n *\n * @memberof workbox-broadcast-update\n */\nconst responsesAreSame = (firstResponse, secondResponse, headersToCheck) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(firstResponse instanceof Response && secondResponse instanceof Response)) {\n            throw new WorkboxError('invalid-responses-are-same-args');\n        }\n    }\n    const atLeastOneHeaderAvailable = headersToCheck.some((header) => {\n        return (firstResponse.headers.has(header) && secondResponse.headers.has(header));\n    });\n    if (!atLeastOneHeaderAvailable) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.warn(`Unable to determine where the response has been updated ` +\n                `because none of the headers that would be checked are present.`);\n            logger.debug(`Attempting to compare the following: `, firstResponse, secondResponse, headersToCheck);\n        }\n        // Just return true, indicating the that responses are the same, since we\n        // can't determine otherwise.\n        return true;\n    }\n    return headersToCheck.every((header) => {\n        const headerStateComparison = firstResponse.headers.has(header) === secondResponse.headers.has(header);\n        const headerValueComparison = firstResponse.headers.get(header) === secondResponse.headers.get(header);\n        return headerStateComparison && headerValueComparison;\n    });\n};\nexport { responsesAreSame };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const CACHE_UPDATED_MESSAGE_TYPE = 'CACHE_UPDATED';\nexport const CACHE_UPDATED_MESSAGE_META = 'workbox-broadcast-update';\nexport const NOTIFY_ALL_CLIENTS = true;\nexport const DEFAULT_HEADERS_TO_CHECK = [\n    'content-length',\n    'etag',\n    'last-modified',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { resultingClientExists } from 'workbox-core/_private/resultingClientExists.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { responsesAreSame } from './responsesAreSame.js';\nimport { CACHE_UPDATED_MESSAGE_META, CACHE_UPDATED_MESSAGE_TYPE, DEFAULT_HEADERS_TO_CHECK, NOTIFY_ALL_CLIENTS, } from './utils/constants.js';\nimport './_version.js';\n// UA-sniff Safari: https://stackoverflow.com/questions/7944460/detect-safari-browser\n// TODO(philipwalton): remove once this Safari bug fix has been released.\n// https://bugs.webkit.org/show_bug.cgi?id=201169\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n/**\n * Generates the default payload used in update messages. By default the\n * payload includes the `cacheName` and `updatedURL` fields.\n *\n * @return Object\n * @private\n */\nfunction defaultPayloadGenerator(data) {\n    return {\n        cacheName: data.cacheName,\n        updatedURL: data.request.url,\n    };\n}\n/**\n * Uses the `postMessage()` API to inform any open windows/tabs when a cached\n * response has been updated.\n *\n * For efficiency's sake, the underlying response bodies are not compared;\n * only specific response headers are checked.\n *\n * @memberof workbox-broadcast-update\n */\nclass BroadcastCacheUpdate {\n    /**\n     * Construct a BroadcastCacheUpdate instance with a specific `channelName` to\n     * broadcast messages on\n     *\n     * @param {Object} [options]\n     * @param {Array<string>} [options.headersToCheck=['content-length', 'etag', 'last-modified']]\n     *     A list of headers that will be used to determine whether the responses\n     *     differ.\n     * @param {string} [options.generatePayload] A function whose return value\n     *     will be used as the `payload` field in any cache update messages sent\n     *     to the window clients.\n     * @param {boolean} [options.notifyAllClients=true] If true (the default) then\n     *     all open clients will receive a message. If false, then only the client\n     *     that make the original request will be notified of the update.\n     */\n    constructor({ generatePayload, headersToCheck, notifyAllClients, } = {}) {\n        this._headersToCheck = headersToCheck || DEFAULT_HEADERS_TO_CHECK;\n        this._generatePayload = generatePayload || defaultPayloadGenerator;\n        this._notifyAllClients = notifyAllClients !== null && notifyAllClients !== void 0 ? notifyAllClients : NOTIFY_ALL_CLIENTS;\n    }\n    /**\n     * Compares two [Responses](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n     * and sends a message (via `postMessage()`) to all window clients if the\n     * responses differ. Neither of the Responses can be\n     * [opaque](https://developer.chrome.com/docs/workbox/caching-resources-during-runtime/#opaque-responses).\n     *\n     * The message that's posted has the following format (where `payload` can\n     * be customized via the `generatePayload` option the instance is created\n     * with):\n     *\n     * ```\n     * {\n     *   type: 'CACHE_UPDATED',\n     *   meta: 'workbox-broadcast-update',\n     *   payload: {\n     *     cacheName: 'the-cache-name',\n     *     updatedURL: 'https://example.com/'\n     *   }\n     * }\n     * ```\n     *\n     * @param {Object} options\n     * @param {Response} [options.oldResponse] Cached response to compare.\n     * @param {Response} options.newResponse Possibly updated response to compare.\n     * @param {Request} options.request The request.\n     * @param {string} options.cacheName Name of the cache the responses belong\n     *     to. This is included in the broadcast message.\n     * @param {Event} options.event event The event that triggered\n     *     this possible cache update.\n     * @return {Promise} Resolves once the update is sent.\n     */\n    async notifyIfUpdated(options) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(options.cacheName, 'string', {\n                moduleName: 'workbox-broadcast-update',\n                className: 'BroadcastCacheUpdate',\n                funcName: 'notifyIfUpdated',\n                paramName: 'cacheName',\n            });\n            assert.isInstance(options.newResponse, Response, {\n                moduleName: 'workbox-broadcast-update',\n                className: 'BroadcastCacheUpdate',\n                funcName: 'notifyIfUpdated',\n                paramName: 'newResponse',\n            });\n            assert.isInstance(options.request, Request, {\n                moduleName: 'workbox-broadcast-update',\n                className: 'BroadcastCacheUpdate',\n                funcName: 'notifyIfUpdated',\n                paramName: 'request',\n            });\n        }\n        // Without two responses there is nothing to compare.\n        if (!options.oldResponse) {\n            return;\n        }\n        if (!responsesAreSame(options.oldResponse, options.newResponse, this._headersToCheck)) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Newer response found (and cached) for:`, options.request.url);\n            }\n            const messageData = {\n                type: CACHE_UPDATED_MESSAGE_TYPE,\n                meta: CACHE_UPDATED_MESSAGE_META,\n                payload: this._generatePayload(options),\n            };\n            // For navigation requests, wait until the new window client exists\n            // before sending the message\n            if (options.request.mode === 'navigate') {\n                let resultingClientId;\n                if (options.event instanceof FetchEvent) {\n                    resultingClientId = options.event.resultingClientId;\n                }\n                const resultingWin = await resultingClientExists(resultingClientId);\n                // Safari does not currently implement postMessage buffering and\n                // there's no good way to feature detect that, so to increase the\n                // chances of the message being delivered in Safari, we add a timeout.\n                // We also do this if `resultingClientExists()` didn't return a client,\n                // which means it timed out, so it's worth waiting a bit longer.\n                if (!resultingWin || isSafari) {\n                    // 3500 is chosen because (according to CrUX data) 80% of mobile\n                    // websites hit the DOMContentLoaded event in less than 3.5 seconds.\n                    // And presumably sites implementing service worker are on the\n                    // higher end of the performance spectrum.\n                    await timeout(3500);\n                }\n            }\n            if (this._notifyAllClients) {\n                const windows = await self.clients.matchAll({ type: 'window' });\n                for (const win of windows) {\n                    win.postMessage(messageData);\n                }\n            }\n            else {\n                // See https://github.com/GoogleChrome/workbox/issues/2895\n                if (options.event instanceof FetchEvent) {\n                    const client = await self.clients.get(options.event.clientId);\n                    client === null || client === void 0 ? void 0 : client.postMessage(messageData);\n                }\n            }\n        }\n    }\n}\nexport { BroadcastCacheUpdate };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { BroadcastCacheUpdate, } from './BroadcastCacheUpdate.js';\nimport './_version.js';\n/**\n * This plugin will automatically broadcast a message whenever a cached response\n * is updated.\n *\n * @memberof workbox-broadcast-update\n */\nclass BroadcastUpdatePlugin {\n    /**\n     * Construct a {@link workbox-broadcast-update.BroadcastUpdate} instance with\n     * the passed options and calls its `notifyIfUpdated` method whenever the\n     * plugin's `cacheDidUpdate` callback is invoked.\n     *\n     * @param {Object} [options]\n     * @param {Array<string>} [options.headersToCheck=['content-length', 'etag', 'last-modified']]\n     *     A list of headers that will be used to determine whether the responses\n     *     differ.\n     * @param {string} [options.generatePayload] A function whose return value\n     *     will be used as the `payload` field in any cache update messages sent\n     *     to the window clients.\n     */\n    constructor(options) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-sw` and `workbox-runtime-caching` handlers when an entry is\n         * added to a cache.\n         *\n         * @private\n         * @param {Object} options The input object to this function.\n         * @param {string} options.cacheName Name of the cache being updated.\n         * @param {Response} [options.oldResponse] The previous cached value, if any.\n         * @param {Response} options.newResponse The new value in the cache.\n         * @param {Request} options.request The request that triggered the update.\n         * @param {Request} options.event The event that triggered the update.\n         */\n        this.cacheDidUpdate = async (options) => {\n            dontWaitFor(this._broadcastUpdate.notifyIfUpdated(options));\n        };\n        this._broadcastUpdate = new BroadcastCacheUpdate(options);\n    }\n}\nexport { BroadcastUpdatePlugin };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = Object.assign(Object.assign({}, matchOptions), { ignoreSearch: true });\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.5.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return typeof input === 'string' ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * {@link workbox-strategies.Strategy~handle} or\n * {@link workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params] The return value from the\n     *     {@link workbox-routing~matchCallback} (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * {@link workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = (await event.preloadResponse);\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail')\n            ? request.clone()\n            : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                throw new WorkboxError('plugin-error-request-will-fetch', {\n                    thrownErrorMessage: err.message,\n                });\n            }\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ? undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error: error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        void this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = Object.assign(Object.assign({}, matchOptions), { cacheName });\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse =\n                (await callback({\n                    cacheName,\n                    matchOptions,\n                    cachedResponse,\n                    request: effectiveRequest,\n                    event: this.event,\n                })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n            // See https://github.com/GoogleChrome/workbox/issues/2818\n            const vary = response.headers.get('Vary');\n            if (vary) {\n                logger.debug(`The response for ${getFriendlyURL(effectiveRequest.url)} ` +\n                    `has a 'Vary: ${vary}' header. ` +\n                    `Consider setting the {ignoreVary: true} option on your strategy ` +\n                    `to ensure cache matching and deletion works as expected.`);\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback\n            ? await cacheMatchIgnoreParams(\n            // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n            // feature. Consider into ways to only add this behavior if using\n            // precaching.\n            cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions)\n            : null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ? responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n                if (error.name === 'QuotaExceededError') {\n                    await executeQuotaErrorCallbacks();\n                }\n                throw error;\n            }\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        const key = `${request.url} | ${mode}`;\n        if (!this._cacheKeys[key]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    // params has a type any can't change right now.\n                    params: this.params, // eslint-disable-line\n                }));\n            }\n            this._cacheKeys[key] = effectiveRequest;\n        }\n        return this._cacheKeys[key];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * {@link workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = Object.assign(Object.assign({}, param), { state });\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * {@link workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * {@link workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while ((promise = this._extendLifetimePromises.shift())) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve(null);\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache =\n                (await callback({\n                    request: this.request,\n                    response: responseToCache,\n                    event: this.event,\n                })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * {@link workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * {@link workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to {@link workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of `[response, done]` promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string'\n            ? new Request(options.request)\n            : options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                    response = await callback({ error, event, request });\n                    if (response) {\n                        break;\n                    }\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error instanceof Error ? error.toString() : ''} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            if (waitUntilError instanceof Error) {\n                error = waitUntilError;\n            }\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error: error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the {@link workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof workbox-strategies.Strategy\n */\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#cache-first-falling-back-to-network)\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass CacheFirst extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await handler.cacheMatch(request);\n        let error = undefined;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await handler.fetchAndCachePut(request);\n            }\n            catch (err) {\n                if (err instanceof Error) {\n                    error = err;\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:navigation-preload:6.5.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * @return {boolean} Whether or not the current browser supports enabling\n * navigation preload.\n *\n * @memberof workbox-navigation-preload\n */\nfunction isSupported() {\n    return Boolean(self.registration && self.registration.navigationPreload);\n}\nexport { isSupported };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { isSupported } from './isSupported.js';\nimport './_version.js';\n/**\n * If the browser supports Navigation Preload, then this will enable it.\n *\n * @param {string} [headerValue] Optionally, allows developers to\n * [override](https://developers.google.com/web/updates/2017/02/navigation-preload#changing_the_header)\n * the value of the `Service-Worker-Navigation-Preload` header which will be\n * sent to the server when making the navigation request.\n *\n * @memberof workbox-navigation-preload\n */\nfunction enable(headerValue) {\n    if (isSupported()) {\n        self.addEventListener('activate', (event) => {\n            event.waitUntil(self.registration.navigationPreload.enable().then(() => {\n                // Defaults to Service-Worker-Navigation-Preload: true if not set.\n                if (headerValue) {\n                    void self.registration.navigationPreload.setHeaderValue(headerValue);\n                }\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Navigation preload is enabled.`);\n                }\n            }));\n        });\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`Navigation preload is not supported in this browser.`);\n        }\n    }\n}\nexport { enable };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:6.5.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                if (state &&\n                    state.originalRequest &&\n                    state.originalRequest instanceof Request) {\n                    // TODO: `state` should never be undefined...\n                    const url = state.originalRequest.url;\n                    if (cachedResponse) {\n                        this.notUpdatedURLs.push(url);\n                    }\n                    else {\n                        this.updatedURLs.push(url);\n                    }\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            // Params is type any, can't change right now.\n            /* eslint-disable */\n            const cacheKey = (params === null || params === void 0 ? void 0 : params.cacheKey) ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            /* eslint-enable */\n            return cacheKey\n                ? new Request(cacheKey, { headers: request.headers })\n                : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message +=\n                ` ${alreadyPrecachedCount} ` +\n                    `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream()\n        ? clonedResponse.body\n        : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\n/**\n * A {@link workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * {@link workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] {@link https://developers.google.com/web/tools/workbox/guides/using-plugins|Plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters|init}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * {@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions|CacheQueryOptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork =\n            options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(PrecacheStrategy.copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (response) {\n            return response;\n        }\n        // If this is an `install` event for an entry that isn't already cached,\n        // then populate the cache.\n        if (handler.event && handler.event.type === 'install') {\n            return await this._handleInstall(request, handler);\n        }\n        // Getting here means something went wrong. An entry that should have been\n        // precached wasn't found in the cache.\n        return await this._handleFetch(request, handler);\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        const params = (handler.params || {});\n        // Fall back to the network if we're configured to do so.\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network.`);\n            }\n            const integrityInManifest = params.integrity;\n            const integrityInRequest = request.integrity;\n            const noIntegrityConflict = !integrityInRequest || integrityInRequest === integrityInManifest;\n            // Do not add integrity if the original request is no-cors\n            // See https://github.com/GoogleChrome/workbox/issues/3096\n            response = await handler.fetch(new Request(request, {\n                integrity: request.mode !== 'no-cors'\n                    ? integrityInRequest || integrityInManifest\n                    : undefined,\n            }));\n            // It's only \"safe\" to repair the cache if we're using SRI to guarantee\n            // that the response matches the precache manifest's expectations,\n            // and there's either a) no integrity property in the incoming request\n            // or b) there is an integrity, and it matches the precache manifest.\n            // See https://github.com/GoogleChrome/workbox/issues/2858\n            // Also if the original request users no-cors we don't use integrity.\n            // See https://github.com/GoogleChrome/workbox/issues/3096\n            if (integrityInManifest &&\n                noIntegrityConflict &&\n                request.mode !== 'no-cors') {\n                this._useDefaultCacheabilityPluginIfNeeded();\n                const wasCached = await handler.cachePut(request, response.clone());\n                if (process.env.NODE_ENV !== 'production') {\n                    if (wasCached) {\n                        logger.log(`A response for ${getFriendlyURL(request.url)} ` +\n                            `was used to \"repair\" the precache.`);\n                    }\n                }\n            }\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = params.cacheKey || (await handler.getCacheKey(request, 'read'));\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` + getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey instanceof Request ? cacheKey.url : cacheKey)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        this._useDefaultCacheabilityPluginIfNeeded();\n        const response = await handler.fetch(request);\n        // Make sure we defer cachePut() until after we know the response\n        // should be cached; see https://github.com/GoogleChrome/workbox/issues/2737\n        const wasCached = await handler.cachePut(request, response.clone());\n        if (!wasCached) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * This method is complex, as there a number of things to account for:\n     *\n     * The `plugins` array can be set at construction, and/or it might be added to\n     * to at any time before the strategy is used.\n     *\n     * At the time the strategy is used (i.e. during an `install` event), there\n     * needs to be at least one plugin that implements `cacheWillUpdate` in the\n     * array, other than `copyRedirectedCacheableResponsesPlugin`.\n     *\n     * - If this method is called and there are no suitable `cacheWillUpdate`\n     * plugins, we need to add `defaultPrecacheCacheabilityPlugin`.\n     *\n     * - If this method is called and there is exactly one `cacheWillUpdate`, then\n     * we don't have to do anything (this might be a previously added\n     * `defaultPrecacheCacheabilityPlugin`, or it might be a custom plugin).\n     *\n     * - If this method is called and there is more than one `cacheWillUpdate`,\n     * then we need to check if one is `defaultPrecacheCacheabilityPlugin`. If so,\n     * we need to remove it. (This situation is unlikely, but it could happen if\n     * the strategy is used multiple times, the first without a `cacheWillUpdate`,\n     * and then later on after manually adding a custom `cacheWillUpdate`.)\n     *\n     * See https://github.com/GoogleChrome/workbox/issues/2737 for more context.\n     *\n     * @private\n     */\n    _useDefaultCacheabilityPluginIfNeeded() {\n        let defaultPluginIndex = null;\n        let cacheWillUpdatePluginCount = 0;\n        for (const [index, plugin] of this.plugins.entries()) {\n            // Ignore the copy redirected plugin when determining what to do.\n            if (plugin === PrecacheStrategy.copyRedirectedCacheableResponsesPlugin) {\n                continue;\n            }\n            // Save the default plugin's index, in case it needs to be removed.\n            if (plugin === PrecacheStrategy.defaultPrecacheCacheabilityPlugin) {\n                defaultPluginIndex = index;\n            }\n            if (plugin.cacheWillUpdate) {\n                cacheWillUpdatePluginCount++;\n            }\n        }\n        if (cacheWillUpdatePluginCount === 0) {\n            this.plugins.push(PrecacheStrategy.defaultPrecacheCacheabilityPlugin);\n        }\n        else if (cacheWillUpdatePluginCount > 1 && defaultPluginIndex !== null) {\n            // Only remove the default plugin; multiple custom plugins are allowed.\n            this.plugins.splice(defaultPluginIndex, 1);\n        }\n        // Nothing needs to be done if cacheWillUpdatePluginCount is 1\n    }\n}\nPrecacheStrategy.defaultPrecacheCacheabilityPlugin = {\n    async cacheWillUpdate({ response }) {\n        if (!response || response.status >= 400) {\n            return null;\n        }\n        return response;\n    },\n};\nPrecacheStrategy.copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    },\n};\nexport { PrecacheStrategy };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true, } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = typeof entry !== 'string' && entry.revision ? 'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * @param {string} url A cache key whose SRI you want to look up.\n     * @return {string} The subresource integrity associated with the cache key,\n     * or undefined if it's not set.\n     */\n    getIntegrityForCacheKey(cacheKey) {\n        return this._cacheKeysToIntegrities.get(cacheKey);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = Object.assign({ cacheKey }, options.params);\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { Route } from 'workbox-routing/Route.js';\nimport { generateURLVariations } from './utils/generateURLVariations.js';\nimport './_version.js';\n/**\n * A subclass of {@link workbox-routing.Route} that takes a\n * {@link workbox-precaching.PrecacheController}\n * instance and uses it to match incoming requests and handle fetching\n * responses from the precache.\n *\n * @memberof workbox-precaching\n * @extends workbox-routing.Route\n */\nclass PrecacheRoute extends Route {\n    /**\n     * @param {PrecacheController} precacheController A `PrecacheController`\n     * instance used to both match requests and respond to fetch events.\n     * @param {Object} [options] Options to control how requests are matched\n     * against the list of precached URLs.\n     * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n     * check cache entries for a URLs ending with '/' to see if there is a hit when\n     * appending the `directoryIndex` value.\n     * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/, /^fbclid$/]] An\n     * array of regex's to remove search params when looking for a cache match.\n     * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n     * check the cache for the URL with a `.html` added to the end of the end.\n     * @param {workbox-precaching~urlManipulation} [options.urlManipulation]\n     * This is a function that should take a URL and return an array of\n     * alternative URLs that should be checked for precache matches.\n     */\n    constructor(precacheController, options) {\n        const match = ({ request, }) => {\n            const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n            for (const possibleURL of generateURLVariations(request.url, options)) {\n                const cacheKey = urlsToCacheKeys.get(possibleURL);\n                if (cacheKey) {\n                    const integrity = precacheController.getIntegrityForCacheKey(cacheKey);\n                    return { cacheKey, integrity };\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` + getFriendlyURL(request.url));\n            }\n            return;\n        };\n        super(match, precacheController.strategy);\n    }\n}\nexport { PrecacheRoute };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport './_version.js';\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options] See the {@link workbox-precaching.PrecacheRoute}\n * options.\n *\n * @memberof workbox-precaching\n */\nfunction addRoute(options) {\n    const precacheController = getOrCreatePrecacheController();\n    const precacheRoute = new PrecacheRoute(precacheController, options);\n    registerRoute(precacheRoute);\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * {@link workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * {@link workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.precache(entries);\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * {@link workbox-precaching.precache} and\n * {@link workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See the\n * {@link workbox-precaching.PrecacheRoute} options.\n *\n * @memberof workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * NavigationRoute makes it easy to create a\n * {@link workbox-routing.Route} that matches for browser\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\n *\n * It will only match incoming Requests whose\n * {@link https://fetch.spec.whatwg.org/#concept-request-mode|mode}\n * is set to `navigate`.\n *\n * You can optionally only apply this route to a subset of navigation requests\n * by using one or both of the `denylist` and `allowlist` parameters.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass NavigationRoute extends Route {\n    /**\n     * If both `denylist` and `allowlist` are provided, the `denylist` will\n     * take precedence and the request will not match this route.\n     *\n     * The regular expressions in `allowlist` and `denylist`\n     * are matched against the concatenated\n     * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\n     * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\n     * portions of the requested URL.\n     *\n     * *Note*: These RegExps may be evaluated against every destination URL during\n     * a navigation. Avoid using\n     * [complex RegExps](https://github.com/GoogleChrome/workbox/issues/3077),\n     * or else your users may see delays when navigating your site.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {Object} options\n     * @param {Array<RegExp>} [options.denylist] If any of these patterns match,\n     * the route will not handle the request (even if a allowlist RegExp matches).\n     * @param {Array<RegExp>} [options.allowlist=[/./]] If any of these patterns\n     * match the URL's pathname and search parameter, the route will handle the\n     * request (assuming the denylist doesn't match).\n     */\n    constructor(handler, { allowlist = [/./], denylist = [] } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArrayOfClass(allowlist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.allowlist',\n            });\n            assert.isArrayOfClass(denylist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.denylist',\n            });\n        }\n        super((options) => this._match(options), handler);\n        this._allowlist = allowlist;\n        this._denylist = denylist;\n    }\n    /**\n     * Routes match handler.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request\n     * @return {boolean}\n     *\n     * @private\n     */\n    _match({ url, request }) {\n        if (request && request.mode !== 'navigate') {\n            return false;\n        }\n        const pathnameAndSearch = url.pathname + url.search;\n        for (const regExp of this._denylist) {\n            if (regExp.test(pathnameAndSearch)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                        `being used, since the URL matches this denylist pattern: ` +\n                        `${regExp.toString()}`);\n                }\n                return false;\n            }\n        }\n        if (this._allowlist.some((regExp) => regExp.test(pathnameAndSearch))) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`The navigation route ${pathnameAndSearch} ` + `is being used.`);\n            }\n            return true;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                `being used, since the URL being navigated to doesn't ` +\n                `match the allowlist.`);\n        }\n        return false;\n    }\n}\nexport { NavigationRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandlerBoundToURL} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandlerBoundToURL} on that instance,\n * instead of using this function.\n *\n * @param {string} url The precached URL which will be used to lookup the\n * `Response`.\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {workbox-routing~handlerCallback}\n *\n * @memberof workbox-precaching\n */\nfunction createHandlerBoundToURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.createHandlerBoundToURL(url);\n}\nexport { createHandlerBoundToURL };\n"],"names":["self","_","e","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","classNameStr","expectedClassName","isReturnValueProblem","expectedMethod","entry","firstEntry","secondEntry","thrownErrorMessage","cacheNameId","name","methodName","expectedClass","normalizedRangeHeader","size","start","end","url","message","status","cacheName","origin","type","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","defaultMethod","validMethods","normalizeHandler","handler","assert","handle","Route","match","setCatchHandler","catchHandler","RegExpRoute","regExp","RegExp","result","exec","href","location","index","toString","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","debugMessages","push","has","get","forEach","msg","err","reject","_catchHandler","catch","catchErr","matchResult","length","undefined","setDefaultHandler","set","registerRoute","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","dontWaitFor","promise","quotaErrorCallbacks","Set","registerQuotaErrorCallback","callback","add","instanceOfAny","constructors","some","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","prototype","advance","continue","continuePrimaryKey","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","resolve","unlisten","removeEventListener","success","wrap","cacheDonePromiseForTransaction","tx","done","complete","DOMException","idbProxyTraps","target","prop","receiver","objectStoreNames","objectStore","replaceTraps","wrapFunction","func","transaction","storeNames","call","unwrap","sort","apply","transformCachableValue","Proxy","IDBRequest","newValue","openDB","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","oldVersion","newVersion","db","deleteDB","deleteDatabase","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","store","shift","oldTraps","DB_NAME","CACHE_OBJECT_STORE","normalizeURL","unNormalizedUrl","hash","CacheTimestampsModel","_db","_cacheName","_upgradeDb","objStore","createObjectStore","keyPath","createIndex","unique","_upgradeDbAndDeleteOldDbs","setTimestamp","timestamp","id","_getId","getDb","durability","put","getTimestamp","expireEntries","minTimestamp","maxCount","cursor","openCursor","entriesToDelete","entriesNotDeletedCount","urlsDeleted","delete","bind","CacheExpiration","config","_isRunning","_rerunRequested","maxEntries","maxAgeSeconds","_maxEntries","_maxAgeSeconds","_matchOptions","matchOptions","_timestampModel","Date","now","urlsExpired","cache","caches","updateTimestamp","isURLExpired","expireOlderThan","Infinity","ExpirationPlugin","cachedResponseWillBeUsed","cachedResponse","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","headers","dateHeader","parsedDate","headerTime","getTime","isNaN","DB_VERSION","REQUEST_OBJECT_STORE_NAME","QUEUE_NAME_INDEX","QueueDb","addEntry","getFirstEntryId","getAllEntriesByQueueName","queueName","results","getAllFromIndex","IDBKeyRange","only","getEntryCountByQueueName","countFromIndex","deleteEntry","getFirstEntryByQueueName","getEndEntryFromIndex","getLastEntryByQueueName","query","direction","contains","deleteObjectStore","autoIncrement","QueueStore","_queueName","_queueDb","pushEntry","requestData","unshiftEntry","firstId","popEntry","_removeEntry","shiftEntry","getAll","serializableProperties","StorableRequest","_requestData","fromRequest","body","clone","arrayBuffer","entries","toObject","assign","toRequest","TAG_PREFIX","MAX_RETENTION_TIME","queueNames","convertEntry","queueStoreEntry","queueEntry","metadata","Queue","forceSyncFallback","onSync","maxRetentionTime","_syncInProgress","_requestsAddedDuringSync","_name","_onSync","replayRequests","_maxRetentionTime","_forceSyncFallback","Boolean","_queueStore","_addSyncListener","pushRequest","_addRequest","unshiftRequest","popRequest","_removeRequest","shiftRequest","allEntries","unexpiredEntries","maxRetentionTimeInMs","operation","storableRequest","registerSync","fetch","sync","register","tag","syncComplete","syncError","queue","lastChance","_queueNames","BackgroundSyncPlugin","options","fetchDidFail","_queue","CacheableResponse","statuses","_statuses","_headers","isResponseCacheable","response","Response","cacheable","headerName","logFriendlyHeaders","CacheableResponsePlugin","cacheWillUpdate","_cacheableResponse","timeout","ms","setTimeout","MAX_RETRY_TIME","resultingClientExists","resultingClientId","existingWindows","clients","matchAll","existingWindowIds","w","resultingWindow","startTime","performance","find","responsesAreSame","firstResponse","secondResponse","headersToCheck","atLeastOneHeaderAvailable","header","every","headerStateComparison","headerValueComparison","CACHE_UPDATED_MESSAGE_TYPE","CACHE_UPDATED_MESSAGE_META","NOTIFY_ALL_CLIENTS","DEFAULT_HEADERS_TO_CHECK","isSafari","defaultPayloadGenerator","updatedURL","BroadcastCacheUpdate","generatePayload","notifyAllClients","_headersToCheck","_generatePayload","_notifyAllClients","notifyIfUpdated","newResponse","oldResponse","messageData","meta","mode","FetchEvent","resultingWin","windows","win","client","clientId","BroadcastUpdatePlugin","_broadcastUpdate","stripParams","fullURL","ignoreParams","strippedURL","param","searchParams","cacheMatchIgnoreParams","strippedRequestURL","keysOptions","ignoreSearch","cacheKeys","cacheKey","strippedCacheKeyURL","Deferred","executeQuotaErrorCallbacks","input","StrategyHandler","strategy","_cacheKeys","ExtendableEvent","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","preloadResponse","possiblePreloadResponse","originalRequest","hasCallback","cb","iterateCallbacks","pluginFilteredRequest","fetchResponse","fetchOptions","runCallbacks","fetchAndCachePut","responseClone","cachePut","cacheMatch","effectiveRequest","getCacheKey","multiMatchOptions","vary","responseToCache","_ensureResponseSafeToCache","hasCacheUpdateCallback","state","statefulCallback","statefulParam","doneWaiting","destroy","pluginsUsed","Strategy","responseDone","handleAll","_getResponse","handlerDone","_awaitComplete","_handle","waitUntilError","strategyStart","strategyName","printFinalResponse","CacheFirst","logs","isSupported","navigationPreload","enable","headerValue","setHeaderValue","clientsClaim","claim","asyncFn","returnPromise","REVISION_SEARCH_PARAM","createCacheKey","urlObject","revision","cacheKeyURL","originalURL","PrecacheInstallReportPlugin","updatedURLs","notUpdatedURLs","handlerWillStart","PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","_precacheController","getCacheKeyForURL","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","supportStatus","canConstructResponseFromBodyStream","testResponse","copyResponse","modifier","responseURL","clonedResponse","responseInit","Headers","statusText","modifiedResponseInit","blob","PrecacheStrategy","_fallbackToNetwork","fallbackToNetwork","copyRedirectedCacheableResponsesPlugin","_handleInstall","_handleFetch","integrityInManifest","integrity","integrityInRequest","noIntegrityConflict","_useDefaultCacheabilityPluginIfNeeded","wasCached","defaultPluginIndex","cacheWillUpdatePluginCount","defaultPrecacheCacheabilityPlugin","redirected","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","install","activate","addToCacheList","_installAndActiveListenersAdded","urlsToWarnAbout","cacheMode","warningMessage","installReportPlugin","credentials","currentlyCachedRequests","expectedCacheKeys","values","getURLsToCacheKeys","getCachedURLs","getIntegrityForCacheKey","matchPrecache","createHandlerBoundToURL","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","urlWithoutIgnoredParams","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","PrecacheRoute","urlsToCacheKeys","possibleURL","addRoute","precacheRoute","precacheAndRoute","NavigationRoute","allowlist","denylist","_match","_allowlist","_denylist","pathnameAndSearch","search"],"mappings":"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E,qBAAoB,IAAI,CAAC0G,OAAO,CAAC1D,GAAI,CAAG,EAAA,CAAA,GACjD,8BAA6BiY,QAAQ,CAAC/X,MAAO,CAAa,YAAA,CAAA,GAC1D,wBAAuB,CAAC,CAAA;IACjC,aAAA;IACJ,WAAA;IACJ,SAAA;IACJ,OAAA;IACJ,KAAA;IACA,IAAA,OAAOue,eAAe,CAAA;IAC1B,GAAA;IACJ;;ICngBA;IACA;AACA;IACA;IACA;IACA;IACA;IAOA;IACA;IACA;IACA;IACA;IACA,MAAMS,QAAQ,CAAC;IACX;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACIve,EAAAA,WAAW,CAAC8W,OAAO,GAAG,EAAE,EAAE;IACtB;IACR;IACA;IACA;IACA;IACA;IACA;QACQ,IAAI,CAACtX,SAAS,GAAGuH,UAAU,CAACM,cAAc,CAACyP,OAAO,CAACtX,SAAS,CAAC,CAAA;IAC7D;IACR;IACA;IACA;IACA;IACA;IACA;IACQ,IAAA,IAAI,CAACid,OAAO,GAAG3F,OAAO,CAAC2F,OAAO,IAAI,EAAE,CAAA;IACpC;IACR;IACA;IACA;IACA;IACA;IACA;IACQ,IAAA,IAAI,CAACW,YAAY,GAAGtG,OAAO,CAACsG,YAAY,CAAA;IACxC;IACR;IACA;IACA;IACA;IACA;IACA;IACQ,IAAA,IAAI,CAAC9N,YAAY,GAAGwH,OAAO,CAACxH,YAAY,CAAA;IAC5C,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACInO,MAAM,CAAC2V,OAAO,EAAE;QACZ,MAAM,CAAC0H,YAAY,CAAC,GAAG,IAAI,CAACC,SAAS,CAAC3H,OAAO,CAAC,CAAA;IAC9C,IAAA,OAAO0H,YAAY,CAAA;IACvB,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;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"}
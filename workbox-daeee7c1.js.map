{"version":3,"file":"workbox-daeee7c1.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/dontWaitFor.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/registerQuotaErrorCallback.js","node_modules/idb/build/esm/wrap-idb-value.js","node_modules/idb/build/esm/index.js","node_modules/workbox-expiration/_version.js","node_modules/workbox-expiration/models/CacheTimestampsModel.js","node_modules/workbox-expiration/CacheExpiration.js","node_modules/workbox-expiration/ExpirationPlugin.js","node_modules/workbox-background-sync/_version.js","node_modules/workbox-background-sync/lib/QueueDb.js","node_modules/workbox-background-sync/lib/QueueStore.js","node_modules/workbox-background-sync/lib/StorableRequest.js","node_modules/workbox-background-sync/Queue.js","node_modules/workbox-background-sync/BackgroundSyncPlugin.js","node_modules/workbox-cacheable-response/_version.js","node_modules/workbox-cacheable-response/CacheableResponse.js","node_modules/workbox-cacheable-response/CacheableResponsePlugin.js","node_modules/workbox-core/_private/timeout.js","node_modules/workbox-core/_private/resultingClientExists.js","node_modules/workbox-broadcast-update/_version.js","node_modules/workbox-broadcast-update/responsesAreSame.js","node_modules/workbox-broadcast-update/utils/constants.js","node_modules/workbox-broadcast-update/BroadcastCacheUpdate.js","node_modules/workbox-broadcast-update/BroadcastUpdatePlugin.js","node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","node_modules/workbox-core/_private/Deferred.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/StrategyHandler.js","node_modules/workbox-strategies/Strategy.js","node_modules/workbox-strategies/utils/messages.js","node_modules/workbox-strategies/CacheFirst.js","node_modules/workbox-navigation-preload/_version.js","node_modules/workbox-navigation-preload/isSupported.js","node_modules/workbox-navigation-preload/enable.js","node_modules/workbox-core/clientsClaim.js","node_modules/workbox-core/_private/waitUntil.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-precaching/PrecacheStrategy.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/PrecacheRoute.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js","node_modules/workbox-routing/NavigationRoute.js","node_modules/workbox-precaching/createHandlerBoundToURL.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.5.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production'\n    ? null\n    : (() => {\n        // Don't overwrite this value if it's already set.\n        // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n        if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n            self.__WB_DISABLE_DEV_LOGS = false;\n        }\n        let inGroup = false;\n        const methodToColorMap = {\n            debug: `#7f8c8d`,\n            log: `#2ecc71`,\n            warn: `#f39c12`,\n            error: `#c0392b`,\n            groupCollapsed: `#3498db`,\n            groupEnd: null, // No colored prefix on groupEnd\n        };\n        const print = function (method, args) {\n            if (self.__WB_DISABLE_DEV_LOGS) {\n                return;\n            }\n            if (method === 'groupCollapsed') {\n                // Safari doesn't print all console.groupCollapsed() arguments:\n                // https://bugs.webkit.org/show_bug.cgi?id=182754\n                if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                    console[method](...args);\n                    return;\n                }\n            }\n            const styles = [\n                `background: ${methodToColorMap[method]}`,\n                `border-radius: 0.5em`,\n                `color: white`,\n                `font-weight: bold`,\n                `padding: 2px 0.5em`,\n            ];\n            // When in a group, the workbox prefix is not displayed.\n            const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n            console[method](...logPrefix, ...args);\n            if (method === 'groupCollapsed') {\n                inGroup = true;\n            }\n            if (method === 'groupEnd') {\n                inGroup = false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const api = {};\n        const loggerMethods = Object.keys(methodToColorMap);\n        for (const key of loggerMethods) {\n            const method = key;\n            api[method] = (...args) => {\n                print(method, args);\n            };\n        }\n        return api;\n    })());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return (`The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`);\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`);\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName, }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}` +\n            `${funcName}()' must be of type ${expectedType}.`);\n    },\n    'incorrect-class': ({ expectedClassName, paramName, moduleName, className, funcName, isReturnValueProblem, }) => {\n        if (!expectedClassName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        if (isReturnValueProblem) {\n            return (`The return value from ` +\n                `'${moduleName}.${classNameStr}${funcName}()' ` +\n                `must be an instance of class ${expectedClassName}.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}${funcName}()' ` +\n            `must be an instance of class ${expectedClassName}.`);\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName, }) => {\n        if (!expectedMethod ||\n            !paramName ||\n            !moduleName ||\n            !className ||\n            !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return (`${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`);\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return (`An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`);\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` + `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`);\n    },\n    'plugin-error-request-will-fetch': ({ thrownErrorMessage }) => {\n        if (!thrownErrorMessage) {\n            throw new Error(`Unexpected input to ` + `'plugin-error-request-will-fetch', error.`);\n        }\n        return (`An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownErrorMessage}'.`);\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return (`You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`);\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return (`The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`);\n    },\n    'unregister-route-route-not-registered': () => {\n        return (`The route you're trying to unregister was not previously ` +\n            `registered.`);\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return (`The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`);\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return (`The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`);\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return (`The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`);\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName, }) => {\n        return (`The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`);\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return (`When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`);\n    },\n    'channel-name-required': () => {\n        return (`You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`);\n    },\n    'invalid-responses-are-same-args': () => {\n        return (`The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`);\n    },\n    'expire-custom-caches-only': () => {\n        return (`You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`);\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return (`The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`);\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return (`Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return (`The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return (`The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`);\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return (`Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`);\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return (`There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`);\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return (`The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`));\n    },\n    'non-precached-url': ({ url }) => {\n        return (`createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`);\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`);\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return (`workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`);\n    },\n    'opaque-streams-source': ({ type }) => {\n        const message = `One of the workbox-streams sources resulted in an ` +\n            `'${type}' response.`;\n        if (type === 'opaqueredirect') {\n            return (`${message} Please do not use a navigation request that results ` +\n                `in a redirect as a source.`);\n        }\n        return `${message} Please ensure your sources are CORS-enabled.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, \n// Need the general type to do the check later.\n// eslint-disable-next-line @typescript-eslint/ban-types\nexpectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClassName'] = expectedClass.name;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] = `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, \n// Need general type to do check later.\nexpectedClass, // eslint-disable-line\ndetails) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production'\n    ? null\n    : {\n        hasMethod,\n        isArray,\n        isInstance,\n        isOneOf,\n        isType,\n        isArrayOfClass,\n    };\nexport { finalAssertExports as assert };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.5.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * {@link workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * {@link workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if (url.origin !== location.origin && result.index !== 0) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a `FetchEvent` using one or more\n * {@link workbox-routing.Route}, responding with a `Response` if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            // event.data is type 'any'\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event, }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([`Found a route to handle this request:`, route]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`,\n                        params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise &&\n            (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        if (catchErr instanceof Error) {\n                            err = catchErr;\n                        }\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event, }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            // route.match returns type any, not possible to change right now.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do.\n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params = matchResult;\n                if (Array.isArray(params) && params.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if (matchResult.constructor === Object && // eslint-disable-line\n                    Object.keys(matchResult).length === 0) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call {@link workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {workbox-routing.Route} The generated `Route`.\n *\n * @memberof workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http')\n                ? captureUrl.pathname\n                : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (url.pathname === captureUrl.pathname &&\n                    url.origin !== captureUrl.origin) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    void promise.then(() => { });\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\n// Can't change Function type right now.\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof workbox-core\n */\n// Can't change Function type\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:6.5.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { openDB, deleteDB } from 'idb';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst CACHE_OBJECT_STORE = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._db = null;\n        this._cacheName = cacheName;\n    }\n    /**\n     * Performs an upgrade of indexedDB.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDb(db) {\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(CACHE_OBJECT_STORE, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n    }\n    /**\n     * Performs an upgrade of indexedDB and deletes deprecated DBs.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDbAndDeleteOldDbs(db) {\n        this._upgradeDb(db);\n        if (this._cacheName) {\n            void deleteDB(this._cacheName);\n        }\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        const db = await this.getDb();\n        const tx = db.transaction(CACHE_OBJECT_STORE, 'readwrite', {\n            durability: 'relaxed',\n        });\n        await tx.store.put(entry);\n        await tx.done;\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number | undefined}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const db = await this.getDb();\n        const entry = await db.get(CACHE_OBJECT_STORE, this._getId(url));\n        return entry === null || entry === void 0 ? void 0 : entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const db = await this.getDb();\n        let cursor = await db\n            .transaction(CACHE_OBJECT_STORE)\n            .store.index('timestamp')\n            .openCursor(null, 'prev');\n        const entriesToDelete = [];\n        let entriesNotDeletedCount = 0;\n        while (cursor) {\n            const result = cursor.value;\n            // TODO(philipwalton): once we can use a multi-key index, we\n            // won't have to check `cacheName` here.\n            if (result.cacheName === this._cacheName) {\n                // Delete an entry if it's older than the max age or\n                // if we already have the max number allowed.\n                if ((minTimestamp && result.timestamp < minTimestamp) ||\n                    (maxCount && entriesNotDeletedCount >= maxCount)) {\n                    // TODO(philipwalton): we should be able to delete the\n                    // entry right here, but doing so causes an iteration\n                    // bug in Safari stable (fixed in TP). Instead we can\n                    // store the keys of the entries to delete, and then\n                    // delete the separate transactions.\n                    // https://github.com/GoogleChrome/workbox/issues/1978\n                    // cursor.delete();\n                    // We only need to return the URL, not the whole entry.\n                    entriesToDelete.push(cursor.value);\n                }\n                else {\n                    entriesNotDeletedCount++;\n                }\n            }\n            cursor = await cursor.continue();\n        }\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await db.delete(CACHE_OBJECT_STORE, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n    /**\n     * Returns an open connection to the database.\n     *\n     * @private\n     */\n    async getDb() {\n        if (!this._db) {\n            this._db = await openDB(DB_NAME, 1, {\n                upgrade: this._upgradeDbAndDeleteOldDbs.bind(this),\n            });\n        }\n        return this._db;\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._matchOptions = config.matchOptions;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds\n            ? Date.now() - this._maxAgeSeconds * 1000\n            : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url, this._matchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ? 'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - this._maxAgeSeconds * 1000;\n            return timestamp !== undefined ? timestamp < expireOlderThan : true;\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in a `workbox-strategy` to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * It can only be used with `workbox-strategy` instances that have a\n * [custom `cacheName` property set](/web/tools/workbox/guides/configure-workbox#custom_cache_names_in_strategies).\n * In other words, it can't be used to expire entries in strategy that uses the\n * default runtime cache name.\n *\n * Whenever a cached response is used or updated, this plugin will look\n * at the associated cache and remove any old or extra responses.\n *\n * When using `maxAgeSeconds`, responses may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached response has been used. If the response has a \"Date\" header, then\n * a light weight expiration check is performed and the response will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {ExpirationPluginOptions} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse, }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request, }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - this._maxAgeSeconds * 1000;\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:background-sync:6.5.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2021 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { openDB } from 'idb';\nimport '../_version.js';\nconst DB_VERSION = 3;\nconst DB_NAME = 'workbox-background-sync';\nconst REQUEST_OBJECT_STORE_NAME = 'requests';\nconst QUEUE_NAME_INDEX = 'queueName';\n/**\n * A class to interact directly an IndexedDB created specifically to save and\n * retrieve QueueStoreEntries. This class encapsulates all the schema details\n * to store the representation of a Queue.\n *\n * @private\n */\nexport class QueueDb {\n    constructor() {\n        this._db = null;\n    }\n    /**\n     * Add QueueStoreEntry to underlying db.\n     *\n     * @param {UnidentifiedQueueStoreEntry} entry\n     */\n    async addEntry(entry) {\n        const db = await this.getDb();\n        const tx = db.transaction(REQUEST_OBJECT_STORE_NAME, 'readwrite', {\n            durability: 'relaxed',\n        });\n        await tx.store.add(entry);\n        await tx.done;\n    }\n    /**\n     * Returns the first entry id in the ObjectStore.\n     *\n     * @return {number | undefined}\n     */\n    async getFirstEntryId() {\n        const db = await this.getDb();\n        const cursor = await db\n            .transaction(REQUEST_OBJECT_STORE_NAME)\n            .store.openCursor();\n        return cursor === null || cursor === void 0 ? void 0 : cursor.value.id;\n    }\n    /**\n     * Get all the entries filtered by index\n     *\n     * @param queueName\n     * @return {Promise<QueueStoreEntry[]>}\n     */\n    async getAllEntriesByQueueName(queueName) {\n        const db = await this.getDb();\n        const results = await db.getAllFromIndex(REQUEST_OBJECT_STORE_NAME, QUEUE_NAME_INDEX, IDBKeyRange.only(queueName));\n        return results ? results : new Array();\n    }\n    /**\n     * Returns the number of entries filtered by index\n     *\n     * @param queueName\n     * @return {Promise<number>}\n     */\n    async getEntryCountByQueueName(queueName) {\n        const db = await this.getDb();\n        return db.countFromIndex(REQUEST_OBJECT_STORE_NAME, QUEUE_NAME_INDEX, IDBKeyRange.only(queueName));\n    }\n    /**\n     * Deletes a single entry by id.\n     *\n     * @param {number} id the id of the entry to be deleted\n     */\n    async deleteEntry(id) {\n        const db = await this.getDb();\n        await db.delete(REQUEST_OBJECT_STORE_NAME, id);\n    }\n    /**\n     *\n     * @param queueName\n     * @returns {Promise<QueueStoreEntry | undefined>}\n     */\n    async getFirstEntryByQueueName(queueName) {\n        return await this.getEndEntryFromIndex(IDBKeyRange.only(queueName), 'next');\n    }\n    /**\n     *\n     * @param queueName\n     * @returns {Promise<QueueStoreEntry | undefined>}\n     */\n    async getLastEntryByQueueName(queueName) {\n        return await this.getEndEntryFromIndex(IDBKeyRange.only(queueName), 'prev');\n    }\n    /**\n     * Returns either the first or the last entries, depending on direction.\n     * Filtered by index.\n     *\n     * @param {IDBCursorDirection} direction\n     * @param {IDBKeyRange} query\n     * @return {Promise<QueueStoreEntry | undefined>}\n     * @private\n     */\n    async getEndEntryFromIndex(query, direction) {\n        const db = await this.getDb();\n        const cursor = await db\n            .transaction(REQUEST_OBJECT_STORE_NAME)\n            .store.index(QUEUE_NAME_INDEX)\n            .openCursor(query, direction);\n        return cursor === null || cursor === void 0 ? void 0 : cursor.value;\n    }\n    /**\n     * Returns an open connection to the database.\n     *\n     * @private\n     */\n    async getDb() {\n        if (!this._db) {\n            this._db = await openDB(DB_NAME, DB_VERSION, {\n                upgrade: this._upgradeDb,\n            });\n        }\n        return this._db;\n    }\n    /**\n     * Upgrades QueueDB\n     *\n     * @param {IDBPDatabase<QueueDBSchema>} db\n     * @param {number} oldVersion\n     * @private\n     */\n    _upgradeDb(db, oldVersion) {\n        if (oldVersion > 0 && oldVersion < DB_VERSION) {\n            if (db.objectStoreNames.contains(REQUEST_OBJECT_STORE_NAME)) {\n                db.deleteObjectStore(REQUEST_OBJECT_STORE_NAME);\n            }\n        }\n        const objStore = db.createObjectStore(REQUEST_OBJECT_STORE_NAME, {\n            autoIncrement: true,\n            keyPath: 'id',\n        });\n        objStore.createIndex(QUEUE_NAME_INDEX, QUEUE_NAME_INDEX, { unique: false });\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { QueueDb, } from './QueueDb.js';\nimport '../_version.js';\n/**\n * A class to manage storing requests from a Queue in IndexedDB,\n * indexed by their queue name for easier access.\n *\n * Most developers will not need to access this class directly;\n * it is exposed for advanced use cases.\n */\nexport class QueueStore {\n    /**\n     * Associates this instance with a Queue instance, so entries added can be\n     * identified by their queue name.\n     *\n     * @param {string} queueName\n     */\n    constructor(queueName) {\n        this._queueName = queueName;\n        this._queueDb = new QueueDb();\n    }\n    /**\n     * Append an entry last in the queue.\n     *\n     * @param {Object} entry\n     * @param {Object} entry.requestData\n     * @param {number} [entry.timestamp]\n     * @param {Object} [entry.metadata]\n     */\n    async pushEntry(entry) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(entry, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'QueueStore',\n                funcName: 'pushEntry',\n                paramName: 'entry',\n            });\n            assert.isType(entry.requestData, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'QueueStore',\n                funcName: 'pushEntry',\n                paramName: 'entry.requestData',\n            });\n        }\n        // Don't specify an ID since one is automatically generated.\n        delete entry.id;\n        entry.queueName = this._queueName;\n        await this._queueDb.addEntry(entry);\n    }\n    /**\n     * Prepend an entry first in the queue.\n     *\n     * @param {Object} entry\n     * @param {Object} entry.requestData\n     * @param {number} [entry.timestamp]\n     * @param {Object} [entry.metadata]\n     */\n    async unshiftEntry(entry) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(entry, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'QueueStore',\n                funcName: 'unshiftEntry',\n                paramName: 'entry',\n            });\n            assert.isType(entry.requestData, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'QueueStore',\n                funcName: 'unshiftEntry',\n                paramName: 'entry.requestData',\n            });\n        }\n        const firstId = await this._queueDb.getFirstEntryId();\n        if (firstId) {\n            // Pick an ID one less than the lowest ID in the object store.\n            entry.id = firstId - 1;\n        }\n        else {\n            // Otherwise let the auto-incrementor assign the ID.\n            delete entry.id;\n        }\n        entry.queueName = this._queueName;\n        await this._queueDb.addEntry(entry);\n    }\n    /**\n     * Removes and returns the last entry in the queue matching the `queueName`.\n     *\n     * @return {Promise<QueueStoreEntry|undefined>}\n     */\n    async popEntry() {\n        return this._removeEntry(await this._queueDb.getLastEntryByQueueName(this._queueName));\n    }\n    /**\n     * Removes and returns the first entry in the queue matching the `queueName`.\n     *\n     * @return {Promise<QueueStoreEntry|undefined>}\n     */\n    async shiftEntry() {\n        return this._removeEntry(await this._queueDb.getFirstEntryByQueueName(this._queueName));\n    }\n    /**\n     * Returns all entries in the store matching the `queueName`.\n     *\n     * @param {Object} options See {@link workbox-background-sync.Queue~getAll}\n     * @return {Promise<Array<Object>>}\n     */\n    async getAll() {\n        return await this._queueDb.getAllEntriesByQueueName(this._queueName);\n    }\n    /**\n     * Returns the number of entries in the store matching the `queueName`.\n     *\n     * @param {Object} options See {@link workbox-background-sync.Queue~size}\n     * @return {Promise<number>}\n     */\n    async size() {\n        return await this._queueDb.getEntryCountByQueueName(this._queueName);\n    }\n    /**\n     * Deletes the entry for the given ID.\n     *\n     * WARNING: this method does not ensure the deleted entry belongs to this\n     * queue (i.e. matches the `queueName`). But this limitation is acceptable\n     * as this class is not publicly exposed. An additional check would make\n     * this method slower than it needs to be.\n     *\n     * @param {number} id\n     */\n    async deleteEntry(id) {\n        await this._queueDb.deleteEntry(id);\n    }\n    /**\n     * Removes and returns the first or last entry in the queue (based on the\n     * `direction` argument) matching the `queueName`.\n     *\n     * @return {Promise<QueueStoreEntry|undefined>}\n     * @private\n     */\n    async _removeEntry(entry) {\n        if (entry) {\n            await this.deleteEntry(entry.id);\n        }\n        return entry;\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\nconst serializableProperties = [\n    'method',\n    'referrer',\n    'referrerPolicy',\n    'mode',\n    'credentials',\n    'cache',\n    'redirect',\n    'integrity',\n    'keepalive',\n];\n/**\n * A class to make it easier to serialize and de-serialize requests so they\n * can be stored in IndexedDB.\n *\n * Most developers will not need to access this class directly;\n * it is exposed for advanced use cases.\n */\nclass StorableRequest {\n    /**\n     * Accepts an object of request data that can be used to construct a\n     * `Request` but can also be stored in IndexedDB.\n     *\n     * @param {Object} requestData An object of request data that includes the\n     *     `url` plus any relevant properties of\n     *     [requestInit]{@link https://fetch.spec.whatwg.org/#requestinit}.\n     */\n    constructor(requestData) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(requestData, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'StorableRequest',\n                funcName: 'constructor',\n                paramName: 'requestData',\n            });\n            assert.isType(requestData.url, 'string', {\n                moduleName: 'workbox-background-sync',\n                className: 'StorableRequest',\n                funcName: 'constructor',\n                paramName: 'requestData.url',\n            });\n        }\n        // If the request's mode is `navigate`, convert it to `same-origin` since\n        // navigation requests can't be constructed via script.\n        if (requestData['mode'] === 'navigate') {\n            requestData['mode'] = 'same-origin';\n        }\n        this._requestData = requestData;\n    }\n    /**\n     * Converts a Request object to a plain object that can be structured\n     * cloned or JSON-stringified.\n     *\n     * @param {Request} request\n     * @return {Promise<StorableRequest>}\n     */\n    static async fromRequest(request) {\n        const requestData = {\n            url: request.url,\n            headers: {},\n        };\n        // Set the body if present.\n        if (request.method !== 'GET') {\n            // Use ArrayBuffer to support non-text request bodies.\n            // NOTE: we can't use Blobs becuse Safari doesn't support storing\n            // Blobs in IndexedDB in some cases:\n            // https://github.com/dfahlander/Dexie.js/issues/618#issuecomment-398348457\n            requestData.body = await request.clone().arrayBuffer();\n        }\n        // Convert the headers from an iterable to an object.\n        for (const [key, value] of request.headers.entries()) {\n            requestData.headers[key] = value;\n        }\n        // Add all other serializable request properties\n        for (const prop of serializableProperties) {\n            if (request[prop] !== undefined) {\n                requestData[prop] = request[prop];\n            }\n        }\n        return new StorableRequest(requestData);\n    }\n    /**\n     * Returns a deep clone of the instances `_requestData` object.\n     *\n     * @return {Object}\n     */\n    toObject() {\n        const requestData = Object.assign({}, this._requestData);\n        requestData.headers = Object.assign({}, this._requestData.headers);\n        if (requestData.body) {\n            requestData.body = requestData.body.slice(0);\n        }\n        return requestData;\n    }\n    /**\n     * Converts this instance to a Request.\n     *\n     * @return {Request}\n     */\n    toRequest() {\n        return new Request(this._requestData.url, this._requestData);\n    }\n    /**\n     * Creates and returns a deep clone of the instance.\n     *\n     * @return {StorableRequest}\n     */\n    clone() {\n        return new StorableRequest(this.toObject());\n    }\n}\nexport { StorableRequest };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { QueueStore } from './lib/QueueStore.js';\nimport { StorableRequest } from './lib/StorableRequest.js';\nimport './_version.js';\nconst TAG_PREFIX = 'workbox-background-sync';\nconst MAX_RETENTION_TIME = 60 * 24 * 7; // 7 days in minutes\nconst queueNames = new Set();\n/**\n * Converts a QueueStore entry into the format exposed by Queue. This entails\n * converting the request data into a real request and omitting the `id` and\n * `queueName` properties.\n *\n * @param {UnidentifiedQueueStoreEntry} queueStoreEntry\n * @return {Queue}\n * @private\n */\nconst convertEntry = (queueStoreEntry) => {\n    const queueEntry = {\n        request: new StorableRequest(queueStoreEntry.requestData).toRequest(),\n        timestamp: queueStoreEntry.timestamp,\n    };\n    if (queueStoreEntry.metadata) {\n        queueEntry.metadata = queueStoreEntry.metadata;\n    }\n    return queueEntry;\n};\n/**\n * A class to manage storing failed requests in IndexedDB and retrying them\n * later. All parts of the storing and replaying process are observable via\n * callbacks.\n *\n * @memberof workbox-background-sync\n */\nclass Queue {\n    /**\n     * Creates an instance of Queue with the given options\n     *\n     * @param {string} name The unique name for this queue. This name must be\n     *     unique as it's used to register sync events and store requests\n     *     in IndexedDB specific to this instance. An error will be thrown if\n     *     a duplicate name is detected.\n     * @param {Object} [options]\n     * @param {Function} [options.onSync] A function that gets invoked whenever\n     *     the 'sync' event fires. The function is invoked with an object\n     *     containing the `queue` property (referencing this instance), and you\n     *     can use the callback to customize the replay behavior of the queue.\n     *     When not set the `replayRequests()` method is called.\n     *     Note: if the replay fails after a sync event, make sure you throw an\n     *     error, so the browser knows to retry the sync event later.\n     * @param {number} [options.maxRetentionTime=7 days] The amount of time (in\n     *     minutes) a request may be retried. After this amount of time has\n     *     passed, the request will be deleted from the queue.\n     * @param {boolean} [options.forceSyncFallback=false] If `true`, instead\n     *     of attempting to use background sync events, always attempt to replay\n     *     queued request at service worker startup. Most folks will not need\n     *     this, unless you explicitly target a runtime like Electron that\n     *     exposes the interfaces for background sync, but does not have a working\n     *     implementation.\n     */\n    constructor(name, { forceSyncFallback, onSync, maxRetentionTime } = {}) {\n        this._syncInProgress = false;\n        this._requestsAddedDuringSync = false;\n        // Ensure the store name is not already being used\n        if (queueNames.has(name)) {\n            throw new WorkboxError('duplicate-queue-name', { name });\n        }\n        else {\n            queueNames.add(name);\n        }\n        this._name = name;\n        this._onSync = onSync || this.replayRequests;\n        this._maxRetentionTime = maxRetentionTime || MAX_RETENTION_TIME;\n        this._forceSyncFallback = Boolean(forceSyncFallback);\n        this._queueStore = new QueueStore(this._name);\n        this._addSyncListener();\n    }\n    /**\n     * @return {string}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Stores the passed request in IndexedDB (with its timestamp and any\n     * metadata) at the end of the queue.\n     *\n     * @param {QueueEntry} entry\n     * @param {Request} entry.request The request to store in the queue.\n     * @param {Object} [entry.metadata] Any metadata you want associated with the\n     *     stored request. When requests are replayed you'll have access to this\n     *     metadata object in case you need to modify the request beforehand.\n     * @param {number} [entry.timestamp] The timestamp (Epoch time in\n     *     milliseconds) when the request was first added to the queue. This is\n     *     used along with `maxRetentionTime` to remove outdated requests. In\n     *     general you don't need to set this value, as it's automatically set\n     *     for you (defaulting to `Date.now()`), but you can update it if you\n     *     don't want particular requests to expire.\n     */\n    async pushRequest(entry) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(entry, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'Queue',\n                funcName: 'pushRequest',\n                paramName: 'entry',\n            });\n            assert.isInstance(entry.request, Request, {\n                moduleName: 'workbox-background-sync',\n                className: 'Queue',\n                funcName: 'pushRequest',\n                paramName: 'entry.request',\n            });\n        }\n        await this._addRequest(entry, 'push');\n    }\n    /**\n     * Stores the passed request in IndexedDB (with its timestamp and any\n     * metadata) at the beginning of the queue.\n     *\n     * @param {QueueEntry} entry\n     * @param {Request} entry.request The request to store in the queue.\n     * @param {Object} [entry.metadata] Any metadata you want associated with the\n     *     stored request. When requests are replayed you'll have access to this\n     *     metadata object in case you need to modify the request beforehand.\n     * @param {number} [entry.timestamp] The timestamp (Epoch time in\n     *     milliseconds) when the request was first added to the queue. This is\n     *     used along with `maxRetentionTime` to remove outdated requests. In\n     *     general you don't need to set this value, as it's automatically set\n     *     for you (defaulting to `Date.now()`), but you can update it if you\n     *     don't want particular requests to expire.\n     */\n    async unshiftRequest(entry) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(entry, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'Queue',\n                funcName: 'unshiftRequest',\n                paramName: 'entry',\n            });\n            assert.isInstance(entry.request, Request, {\n                moduleName: 'workbox-background-sync',\n                className: 'Queue',\n                funcName: 'unshiftRequest',\n                paramName: 'entry.request',\n            });\n        }\n        await this._addRequest(entry, 'unshift');\n    }\n    /**\n     * Removes and returns the last request in the queue (along with its\n     * timestamp and any metadata). The returned object takes the form:\n     * `{request, timestamp, metadata}`.\n     *\n     * @return {Promise<QueueEntry | undefined>}\n     */\n    async popRequest() {\n        return this._removeRequest('pop');\n    }\n    /**\n     * Removes and returns the first request in the queue (along with its\n     * timestamp and any metadata). The returned object takes the form:\n     * `{request, timestamp, metadata}`.\n     *\n     * @return {Promise<QueueEntry | undefined>}\n     */\n    async shiftRequest() {\n        return this._removeRequest('shift');\n    }\n    /**\n     * Returns all the entries that have not expired (per `maxRetentionTime`).\n     * Any expired entries are removed from the queue.\n     *\n     * @return {Promise<Array<QueueEntry>>}\n     */\n    async getAll() {\n        const allEntries = await this._queueStore.getAll();\n        const now = Date.now();\n        const unexpiredEntries = [];\n        for (const entry of allEntries) {\n            // Ignore requests older than maxRetentionTime. Call this function\n            // recursively until an unexpired request is found.\n            const maxRetentionTimeInMs = this._maxRetentionTime * 60 * 1000;\n            if (now - entry.timestamp > maxRetentionTimeInMs) {\n                await this._queueStore.deleteEntry(entry.id);\n            }\n            else {\n                unexpiredEntries.push(convertEntry(entry));\n            }\n        }\n        return unexpiredEntries;\n    }\n    /**\n     * Returns the number of entries present in the queue.\n     * Note that expired entries (per `maxRetentionTime`) are also included in this count.\n     *\n     * @return {Promise<number>}\n     */\n    async size() {\n        return await this._queueStore.size();\n    }\n    /**\n     * Adds the entry to the QueueStore and registers for a sync event.\n     *\n     * @param {Object} entry\n     * @param {Request} entry.request\n     * @param {Object} [entry.metadata]\n     * @param {number} [entry.timestamp=Date.now()]\n     * @param {string} operation ('push' or 'unshift')\n     * @private\n     */\n    async _addRequest({ request, metadata, timestamp = Date.now() }, operation) {\n        const storableRequest = await StorableRequest.fromRequest(request.clone());\n        const entry = {\n            requestData: storableRequest.toObject(),\n            timestamp,\n        };\n        // Only include metadata if it's present.\n        if (metadata) {\n            entry.metadata = metadata;\n        }\n        switch (operation) {\n            case 'push':\n                await this._queueStore.pushEntry(entry);\n                break;\n            case 'unshift':\n                await this._queueStore.unshiftEntry(entry);\n                break;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`Request for '${getFriendlyURL(request.url)}' has ` +\n                `been added to background sync queue '${this._name}'.`);\n        }\n        // Don't register for a sync if we're in the middle of a sync. Instead,\n        // we wait until the sync is complete and call register if\n        // `this._requestsAddedDuringSync` is true.\n        if (this._syncInProgress) {\n            this._requestsAddedDuringSync = true;\n        }\n        else {\n            await this.registerSync();\n        }\n    }\n    /**\n     * Removes and returns the first or last (depending on `operation`) entry\n     * from the QueueStore that's not older than the `maxRetentionTime`.\n     *\n     * @param {string} operation ('pop' or 'shift')\n     * @return {Object|undefined}\n     * @private\n     */\n    async _removeRequest(operation) {\n        const now = Date.now();\n        let entry;\n        switch (operation) {\n            case 'pop':\n                entry = await this._queueStore.popEntry();\n                break;\n            case 'shift':\n                entry = await this._queueStore.shiftEntry();\n                break;\n        }\n        if (entry) {\n            // Ignore requests older than maxRetentionTime. Call this function\n            // recursively until an unexpired request is found.\n            const maxRetentionTimeInMs = this._maxRetentionTime * 60 * 1000;\n            if (now - entry.timestamp > maxRetentionTimeInMs) {\n                return this._removeRequest(operation);\n            }\n            return convertEntry(entry);\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Loops through each request in the queue and attempts to re-fetch it.\n     * If any request fails to re-fetch, it's put back in the same position in\n     * the queue (which registers a retry for the next sync event).\n     */\n    async replayRequests() {\n        let entry;\n        while ((entry = await this.shiftRequest())) {\n            try {\n                await fetch(entry.request.clone());\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Request for '${getFriendlyURL(entry.request.url)}' ` +\n                        `has been replayed in queue '${this._name}'`);\n                }\n            }\n            catch (error) {\n                await this.unshiftRequest(entry);\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Request for '${getFriendlyURL(entry.request.url)}' ` +\n                        `failed to replay, putting it back in queue '${this._name}'`);\n                }\n                throw new WorkboxError('queue-replay-failed', { name: this._name });\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`All requests in queue '${this.name}' have successfully ` +\n                `replayed; the queue is now empty!`);\n        }\n    }\n    /**\n     * Registers a sync event with a tag unique to this instance.\n     */\n    async registerSync() {\n        // See https://github.com/GoogleChrome/workbox/issues/2393\n        if ('sync' in self.registration && !this._forceSyncFallback) {\n            try {\n                await self.registration.sync.register(`${TAG_PREFIX}:${this._name}`);\n            }\n            catch (err) {\n                // This means the registration failed for some reason, possibly due to\n                // the user disabling it.\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to register sync event for '${this._name}'.`, err);\n                }\n            }\n        }\n    }\n    /**\n     * In sync-supporting browsers, this adds a listener for the sync event.\n     * In non-sync-supporting browsers, or if _forceSyncFallback is true, this\n     * will retry the queue on service worker startup.\n     *\n     * @private\n     */\n    _addSyncListener() {\n        // See https://github.com/GoogleChrome/workbox/issues/2393\n        if ('sync' in self.registration && !this._forceSyncFallback) {\n            self.addEventListener('sync', (event) => {\n                if (event.tag === `${TAG_PREFIX}:${this._name}`) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.log(`Background sync for tag '${event.tag}' ` + `has been received`);\n                    }\n                    const syncComplete = async () => {\n                        this._syncInProgress = true;\n                        let syncError;\n                        try {\n                            await this._onSync({ queue: this });\n                        }\n                        catch (error) {\n                            if (error instanceof Error) {\n                                syncError = error;\n                                // Rethrow the error. Note: the logic in the finally clause\n                                // will run before this gets rethrown.\n                                throw syncError;\n                            }\n                        }\n                        finally {\n                            // New items may have been added to the queue during the sync,\n                            // so we need to register for a new sync if that's happened...\n                            // Unless there was an error during the sync, in which\n                            // case the browser will automatically retry later, as long\n                            // as `event.lastChance` is not true.\n                            if (this._requestsAddedDuringSync &&\n                                !(syncError && !event.lastChance)) {\n                                await this.registerSync();\n                            }\n                            this._syncInProgress = false;\n                            this._requestsAddedDuringSync = false;\n                        }\n                    };\n                    event.waitUntil(syncComplete());\n                }\n            });\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Background sync replaying without background sync event`);\n            }\n            // If the browser doesn't support background sync, or the developer has\n            // opted-in to not using it, retry every time the service worker starts up\n            // as a fallback.\n            void this._onSync({ queue: this });\n        }\n    }\n    /**\n     * Returns the set of queue names. This is primarily used to reset the list\n     * of queue names in tests.\n     *\n     * @return {Set<string>}\n     *\n     * @private\n     */\n    static get _queueNames() {\n        return queueNames;\n    }\n}\nexport { Queue };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Queue } from './Queue.js';\nimport './_version.js';\n/**\n * A class implementing the `fetchDidFail` lifecycle callback. This makes it\n * easier to add failed requests to a background sync Queue.\n *\n * @memberof workbox-background-sync\n */\nclass BackgroundSyncPlugin {\n    /**\n     * @param {string} name See the {@link workbox-background-sync.Queue}\n     *     documentation for parameter details.\n     * @param {Object} [options] See the\n     *     {@link workbox-background-sync.Queue} documentation for\n     *     parameter details.\n     */\n    constructor(name, options) {\n        /**\n         * @param {Object} options\n         * @param {Request} options.request\n         * @private\n         */\n        this.fetchDidFail = async ({ request }) => {\n            await this._queue.pushRequest({ request });\n        };\n        this._queue = new Queue(name, options);\n    }\n}\nexport { BackgroundSyncPlugin };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:cacheable-response:6.5.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * This class allows you to set up rules determining what\n * status codes and/or headers need to be present in order for a\n * [`Response`](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n * to be considered cacheable.\n *\n * @memberof workbox-cacheable-response\n */\nclass CacheableResponse {\n    /**\n     * To construct a new CacheableResponse instance you must provide at least\n     * one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.statuses || config.headers)) {\n                throw new WorkboxError('statuses-or-headers-required', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.statuses) {\n                assert.isArray(config.statuses, {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.statuses',\n                });\n            }\n            if (config.headers) {\n                assert.isType(config.headers, 'object', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.headers',\n                });\n            }\n        }\n        this._statuses = config.statuses;\n        this._headers = config.headers;\n    }\n    /**\n     * Checks a response to see whether it's cacheable or not, based on this\n     * object's configuration.\n     *\n     * @param {Response} response The response whose cacheability is being\n     * checked.\n     * @return {boolean} `true` if the `Response` is cacheable, and `false`\n     * otherwise.\n     */\n    isResponseCacheable(response) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(response, Response, {\n                moduleName: 'workbox-cacheable-response',\n                className: 'CacheableResponse',\n                funcName: 'isResponseCacheable',\n                paramName: 'response',\n            });\n        }\n        let cacheable = true;\n        if (this._statuses) {\n            cacheable = this._statuses.includes(response.status);\n        }\n        if (this._headers && cacheable) {\n            cacheable = Object.keys(this._headers).some((headerName) => {\n                return response.headers.get(headerName) === this._headers[headerName];\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (!cacheable) {\n                logger.groupCollapsed(`The request for ` +\n                    `'${getFriendlyURL(response.url)}' returned a response that does ` +\n                    `not meet the criteria for being cached.`);\n                logger.groupCollapsed(`View cacheability criteria here.`);\n                logger.log(`Cacheable statuses: ` + JSON.stringify(this._statuses));\n                logger.log(`Cacheable headers: ` + JSON.stringify(this._headers, null, 2));\n                logger.groupEnd();\n                const logFriendlyHeaders = {};\n                response.headers.forEach((value, key) => {\n                    logFriendlyHeaders[key] = value;\n                });\n                logger.groupCollapsed(`View response status and headers here.`);\n                logger.log(`Response status: ${response.status}`);\n                logger.log(`Response headers: ` + JSON.stringify(logFriendlyHeaders, null, 2));\n                logger.groupEnd();\n                logger.groupCollapsed(`View full response details here.`);\n                logger.log(response.headers);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n            }\n        }\n        return cacheable;\n    }\n}\nexport { CacheableResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse, } from './CacheableResponse.js';\nimport './_version.js';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof workbox-cacheable-response\n */\nclass CacheableResponsePlugin {\n    /**\n     * To construct a new CacheableResponsePlugin instance you must provide at\n     * least one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config) {\n        /**\n         * @param {Object} options\n         * @param {Response} options.response\n         * @return {Response|null}\n         * @private\n         */\n        this.cacheWillUpdate = async ({ response }) => {\n            if (this._cacheableResponse.isResponseCacheable(response)) {\n                return response;\n            }\n            return null;\n        };\n        this._cacheableResponse = new CacheableResponse(config);\n    }\n}\nexport { CacheableResponsePlugin };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { timeout } from './timeout.js';\nimport '../_version.js';\nconst MAX_RETRY_TIME = 2000;\n/**\n * Returns a promise that resolves to a window client matching the passed\n * `resultingClientId`. For browsers that don't support `resultingClientId`\n * or if waiting for the resulting client to apper takes too long, resolve to\n * `undefined`.\n *\n * @param {string} [resultingClientId]\n * @return {Promise<Client|undefined>}\n * @private\n */\nexport async function resultingClientExists(resultingClientId) {\n    if (!resultingClientId) {\n        return;\n    }\n    let existingWindows = await self.clients.matchAll({ type: 'window' });\n    const existingWindowIds = new Set(existingWindows.map((w) => w.id));\n    let resultingWindow;\n    const startTime = performance.now();\n    // Only wait up to `MAX_RETRY_TIME` to find a matching client.\n    while (performance.now() - startTime < MAX_RETRY_TIME) {\n        existingWindows = await self.clients.matchAll({ type: 'window' });\n        resultingWindow = existingWindows.find((w) => {\n            if (resultingClientId) {\n                // If we have a `resultingClientId`, we can match on that.\n                return w.id === resultingClientId;\n            }\n            else {\n                // Otherwise match on finding a window not in `existingWindowIds`.\n                return !existingWindowIds.has(w.id);\n            }\n        });\n        if (resultingWindow) {\n            break;\n        }\n        // Sleep for 100ms and retry.\n        await timeout(100);\n    }\n    return resultingWindow;\n}\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:broadcast-update:6.5.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * Given two `Response's`, compares several header values to see if they are\n * the same or not.\n *\n * @param {Response} firstResponse\n * @param {Response} secondResponse\n * @param {Array<string>} headersToCheck\n * @return {boolean}\n *\n * @memberof workbox-broadcast-update\n */\nconst responsesAreSame = (firstResponse, secondResponse, headersToCheck) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(firstResponse instanceof Response && secondResponse instanceof Response)) {\n            throw new WorkboxError('invalid-responses-are-same-args');\n        }\n    }\n    const atLeastOneHeaderAvailable = headersToCheck.some((header) => {\n        return (firstResponse.headers.has(header) && secondResponse.headers.has(header));\n    });\n    if (!atLeastOneHeaderAvailable) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.warn(`Unable to determine where the response has been updated ` +\n                `because none of the headers that would be checked are present.`);\n            logger.debug(`Attempting to compare the following: `, firstResponse, secondResponse, headersToCheck);\n        }\n        // Just return true, indicating the that responses are the same, since we\n        // can't determine otherwise.\n        return true;\n    }\n    return headersToCheck.every((header) => {\n        const headerStateComparison = firstResponse.headers.has(header) === secondResponse.headers.has(header);\n        const headerValueComparison = firstResponse.headers.get(header) === secondResponse.headers.get(header);\n        return headerStateComparison && headerValueComparison;\n    });\n};\nexport { responsesAreSame };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const CACHE_UPDATED_MESSAGE_TYPE = 'CACHE_UPDATED';\nexport const CACHE_UPDATED_MESSAGE_META = 'workbox-broadcast-update';\nexport const NOTIFY_ALL_CLIENTS = true;\nexport const DEFAULT_HEADERS_TO_CHECK = [\n    'content-length',\n    'etag',\n    'last-modified',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { resultingClientExists } from 'workbox-core/_private/resultingClientExists.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { responsesAreSame } from './responsesAreSame.js';\nimport { CACHE_UPDATED_MESSAGE_META, CACHE_UPDATED_MESSAGE_TYPE, DEFAULT_HEADERS_TO_CHECK, NOTIFY_ALL_CLIENTS, } from './utils/constants.js';\nimport './_version.js';\n// UA-sniff Safari: https://stackoverflow.com/questions/7944460/detect-safari-browser\n// TODO(philipwalton): remove once this Safari bug fix has been released.\n// https://bugs.webkit.org/show_bug.cgi?id=201169\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n/**\n * Generates the default payload used in update messages. By default the\n * payload includes the `cacheName` and `updatedURL` fields.\n *\n * @return Object\n * @private\n */\nfunction defaultPayloadGenerator(data) {\n    return {\n        cacheName: data.cacheName,\n        updatedURL: data.request.url,\n    };\n}\n/**\n * Uses the `postMessage()` API to inform any open windows/tabs when a cached\n * response has been updated.\n *\n * For efficiency's sake, the underlying response bodies are not compared;\n * only specific response headers are checked.\n *\n * @memberof workbox-broadcast-update\n */\nclass BroadcastCacheUpdate {\n    /**\n     * Construct a BroadcastCacheUpdate instance with a specific `channelName` to\n     * broadcast messages on\n     *\n     * @param {Object} [options]\n     * @param {Array<string>} [options.headersToCheck=['content-length', 'etag', 'last-modified']]\n     *     A list of headers that will be used to determine whether the responses\n     *     differ.\n     * @param {string} [options.generatePayload] A function whose return value\n     *     will be used as the `payload` field in any cache update messages sent\n     *     to the window clients.\n     * @param {boolean} [options.notifyAllClients=true] If true (the default) then\n     *     all open clients will receive a message. If false, then only the client\n     *     that make the original request will be notified of the update.\n     */\n    constructor({ generatePayload, headersToCheck, notifyAllClients, } = {}) {\n        this._headersToCheck = headersToCheck || DEFAULT_HEADERS_TO_CHECK;\n        this._generatePayload = generatePayload || defaultPayloadGenerator;\n        this._notifyAllClients = notifyAllClients !== null && notifyAllClients !== void 0 ? notifyAllClients : NOTIFY_ALL_CLIENTS;\n    }\n    /**\n     * Compares two [Responses](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n     * and sends a message (via `postMessage()`) to all window clients if the\n     * responses differ. Neither of the Responses can be\n     * [opaque](https://developer.chrome.com/docs/workbox/caching-resources-during-runtime/#opaque-responses).\n     *\n     * The message that's posted has the following format (where `payload` can\n     * be customized via the `generatePayload` option the instance is created\n     * with):\n     *\n     * ```\n     * {\n     *   type: 'CACHE_UPDATED',\n     *   meta: 'workbox-broadcast-update',\n     *   payload: {\n     *     cacheName: 'the-cache-name',\n     *     updatedURL: 'https://example.com/'\n     *   }\n     * }\n     * ```\n     *\n     * @param {Object} options\n     * @param {Response} [options.oldResponse] Cached response to compare.\n     * @param {Response} options.newResponse Possibly updated response to compare.\n     * @param {Request} options.request The request.\n     * @param {string} options.cacheName Name of the cache the responses belong\n     *     to. This is included in the broadcast message.\n     * @param {Event} options.event event The event that triggered\n     *     this possible cache update.\n     * @return {Promise} Resolves once the update is sent.\n     */\n    async notifyIfUpdated(options) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(options.cacheName, 'string', {\n                moduleName: 'workbox-broadcast-update',\n                className: 'BroadcastCacheUpdate',\n                funcName: 'notifyIfUpdated',\n                paramName: 'cacheName',\n            });\n            assert.isInstance(options.newResponse, Response, {\n                moduleName: 'workbox-broadcast-update',\n                className: 'BroadcastCacheUpdate',\n                funcName: 'notifyIfUpdated',\n                paramName: 'newResponse',\n            });\n            assert.isInstance(options.request, Request, {\n                moduleName: 'workbox-broadcast-update',\n                className: 'BroadcastCacheUpdate',\n                funcName: 'notifyIfUpdated',\n                paramName: 'request',\n            });\n        }\n        // Without two responses there is nothing to compare.\n        if (!options.oldResponse) {\n            return;\n        }\n        if (!responsesAreSame(options.oldResponse, options.newResponse, this._headersToCheck)) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Newer response found (and cached) for:`, options.request.url);\n            }\n            const messageData = {\n                type: CACHE_UPDATED_MESSAGE_TYPE,\n                meta: CACHE_UPDATED_MESSAGE_META,\n                payload: this._generatePayload(options),\n            };\n            // For navigation requests, wait until the new window client exists\n            // before sending the message\n            if (options.request.mode === 'navigate') {\n                let resultingClientId;\n                if (options.event instanceof FetchEvent) {\n                    resultingClientId = options.event.resultingClientId;\n                }\n                const resultingWin = await resultingClientExists(resultingClientId);\n                // Safari does not currently implement postMessage buffering and\n                // there's no good way to feature detect that, so to increase the\n                // chances of the message being delivered in Safari, we add a timeout.\n                // We also do this if `resultingClientExists()` didn't return a client,\n                // which means it timed out, so it's worth waiting a bit longer.\n                if (!resultingWin || isSafari) {\n                    // 3500 is chosen because (according to CrUX data) 80% of mobile\n                    // websites hit the DOMContentLoaded event in less than 3.5 seconds.\n                    // And presumably sites implementing service worker are on the\n                    // higher end of the performance spectrum.\n                    await timeout(3500);\n                }\n            }\n            if (this._notifyAllClients) {\n                const windows = await self.clients.matchAll({ type: 'window' });\n                for (const win of windows) {\n                    win.postMessage(messageData);\n                }\n            }\n            else {\n                // See https://github.com/GoogleChrome/workbox/issues/2895\n                if (options.event instanceof FetchEvent) {\n                    const client = await self.clients.get(options.event.clientId);\n                    client === null || client === void 0 ? void 0 : client.postMessage(messageData);\n                }\n            }\n        }\n    }\n}\nexport { BroadcastCacheUpdate };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { BroadcastCacheUpdate, } from './BroadcastCacheUpdate.js';\nimport './_version.js';\n/**\n * This plugin will automatically broadcast a message whenever a cached response\n * is updated.\n *\n * @memberof workbox-broadcast-update\n */\nclass BroadcastUpdatePlugin {\n    /**\n     * Construct a {@link workbox-broadcast-update.BroadcastUpdate} instance with\n     * the passed options and calls its `notifyIfUpdated` method whenever the\n     * plugin's `cacheDidUpdate` callback is invoked.\n     *\n     * @param {Object} [options]\n     * @param {Array<string>} [options.headersToCheck=['content-length', 'etag', 'last-modified']]\n     *     A list of headers that will be used to determine whether the responses\n     *     differ.\n     * @param {string} [options.generatePayload] A function whose return value\n     *     will be used as the `payload` field in any cache update messages sent\n     *     to the window clients.\n     */\n    constructor(options) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-sw` and `workbox-runtime-caching` handlers when an entry is\n         * added to a cache.\n         *\n         * @private\n         * @param {Object} options The input object to this function.\n         * @param {string} options.cacheName Name of the cache being updated.\n         * @param {Response} [options.oldResponse] The previous cached value, if any.\n         * @param {Response} options.newResponse The new value in the cache.\n         * @param {Request} options.request The request that triggered the update.\n         * @param {Request} options.event The event that triggered the update.\n         */\n        this.cacheDidUpdate = async (options) => {\n            dontWaitFor(this._broadcastUpdate.notifyIfUpdated(options));\n        };\n        this._broadcastUpdate = new BroadcastCacheUpdate(options);\n    }\n}\nexport { BroadcastUpdatePlugin };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = Object.assign(Object.assign({}, matchOptions), { ignoreSearch: true });\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.5.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return typeof input === 'string' ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * {@link workbox-strategies.Strategy~handle} or\n * {@link workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params] The return value from the\n     *     {@link workbox-routing~matchCallback} (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * {@link workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = (await event.preloadResponse);\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail')\n            ? request.clone()\n            : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                throw new WorkboxError('plugin-error-request-will-fetch', {\n                    thrownErrorMessage: err.message,\n                });\n            }\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ? undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error: error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        void this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = Object.assign(Object.assign({}, matchOptions), { cacheName });\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse =\n                (await callback({\n                    cacheName,\n                    matchOptions,\n                    cachedResponse,\n                    request: effectiveRequest,\n                    event: this.event,\n                })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n            // See https://github.com/GoogleChrome/workbox/issues/2818\n            const vary = response.headers.get('Vary');\n            if (vary) {\n                logger.debug(`The response for ${getFriendlyURL(effectiveRequest.url)} ` +\n                    `has a 'Vary: ${vary}' header. ` +\n                    `Consider setting the {ignoreVary: true} option on your strategy ` +\n                    `to ensure cache matching and deletion works as expected.`);\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback\n            ? await cacheMatchIgnoreParams(\n            // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n            // feature. Consider into ways to only add this behavior if using\n            // precaching.\n            cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions)\n            : null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ? responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n                if (error.name === 'QuotaExceededError') {\n                    await executeQuotaErrorCallbacks();\n                }\n                throw error;\n            }\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        const key = `${request.url} | ${mode}`;\n        if (!this._cacheKeys[key]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    // params has a type any can't change right now.\n                    params: this.params, // eslint-disable-line\n                }));\n            }\n            this._cacheKeys[key] = effectiveRequest;\n        }\n        return this._cacheKeys[key];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * {@link workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = Object.assign(Object.assign({}, param), { state });\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * {@link workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * {@link workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while ((promise = this._extendLifetimePromises.shift())) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve(null);\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache =\n                (await callback({\n                    request: this.request,\n                    response: responseToCache,\n                    event: this.event,\n                })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * {@link workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * {@link workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to {@link workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of `[response, done]` promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string'\n            ? new Request(options.request)\n            : options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                    response = await callback({ error, event, request });\n                    if (response) {\n                        break;\n                    }\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error instanceof Error ? error.toString() : ''} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            if (waitUntilError instanceof Error) {\n                error = waitUntilError;\n            }\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error: error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the {@link workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof workbox-strategies.Strategy\n */\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#cache-first-falling-back-to-network)\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass CacheFirst extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await handler.cacheMatch(request);\n        let error = undefined;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await handler.fetchAndCachePut(request);\n            }\n            catch (err) {\n                if (err instanceof Error) {\n                    error = err;\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:navigation-preload:6.5.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * @return {boolean} Whether or not the current browser supports enabling\n * navigation preload.\n *\n * @memberof workbox-navigation-preload\n */\nfunction isSupported() {\n    return Boolean(self.registration && self.registration.navigationPreload);\n}\nexport { isSupported };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { isSupported } from './isSupported.js';\nimport './_version.js';\n/**\n * If the browser supports Navigation Preload, then this will enable it.\n *\n * @param {string} [headerValue] Optionally, allows developers to\n * [override](https://developers.google.com/web/updates/2017/02/navigation-preload#changing_the_header)\n * the value of the `Service-Worker-Navigation-Preload` header which will be\n * sent to the server when making the navigation request.\n *\n * @memberof workbox-navigation-preload\n */\nfunction enable(headerValue) {\n    if (isSupported()) {\n        self.addEventListener('activate', (event) => {\n            event.waitUntil(self.registration.navigationPreload.enable().then(() => {\n                // Defaults to Service-Worker-Navigation-Preload: true if not set.\n                if (headerValue) {\n                    void self.registration.navigationPreload.setHeaderValue(headerValue);\n                }\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Navigation preload is enabled.`);\n                }\n            }));\n        });\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`Navigation preload is not supported in this browser.`);\n        }\n    }\n}\nexport { enable };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:6.5.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                if (state &&\n                    state.originalRequest &&\n                    state.originalRequest instanceof Request) {\n                    // TODO: `state` should never be undefined...\n                    const url = state.originalRequest.url;\n                    if (cachedResponse) {\n                        this.notUpdatedURLs.push(url);\n                    }\n                    else {\n                        this.updatedURLs.push(url);\n                    }\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            // Params is type any, can't change right now.\n            /* eslint-disable */\n            const cacheKey = (params === null || params === void 0 ? void 0 : params.cacheKey) ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            /* eslint-enable */\n            return cacheKey\n                ? new Request(cacheKey, { headers: request.headers })\n                : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message +=\n                ` ${alreadyPrecachedCount} ` +\n                    `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream()\n        ? clonedResponse.body\n        : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\n/**\n * A {@link workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * {@link workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] {@link https://developers.google.com/web/tools/workbox/guides/using-plugins|Plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters|init}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * {@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions|CacheQueryOptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork =\n            options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(PrecacheStrategy.copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (response) {\n            return response;\n        }\n        // If this is an `install` event for an entry that isn't already cached,\n        // then populate the cache.\n        if (handler.event && handler.event.type === 'install') {\n            return await this._handleInstall(request, handler);\n        }\n        // Getting here means something went wrong. An entry that should have been\n        // precached wasn't found in the cache.\n        return await this._handleFetch(request, handler);\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        const params = (handler.params || {});\n        // Fall back to the network if we're configured to do so.\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network.`);\n            }\n            const integrityInManifest = params.integrity;\n            const integrityInRequest = request.integrity;\n            const noIntegrityConflict = !integrityInRequest || integrityInRequest === integrityInManifest;\n            response = await handler.fetch(new Request(request, {\n                integrity: integrityInRequest || integrityInManifest,\n            }));\n            // It's only \"safe\" to repair the cache if we're using SRI to guarantee\n            // that the response matches the precache manifest's expectations,\n            // and there's either a) no integrity property in the incoming request\n            // or b) there is an integrity, and it matches the precache manifest.\n            // See https://github.com/GoogleChrome/workbox/issues/2858\n            if (integrityInManifest && noIntegrityConflict) {\n                this._useDefaultCacheabilityPluginIfNeeded();\n                const wasCached = await handler.cachePut(request, response.clone());\n                if (process.env.NODE_ENV !== 'production') {\n                    if (wasCached) {\n                        logger.log(`A response for ${getFriendlyURL(request.url)} ` +\n                            `was used to \"repair\" the precache.`);\n                    }\n                }\n            }\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = params.cacheKey || (await handler.getCacheKey(request, 'read'));\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` + getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey instanceof Request ? cacheKey.url : cacheKey)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        this._useDefaultCacheabilityPluginIfNeeded();\n        const response = await handler.fetch(request);\n        // Make sure we defer cachePut() until after we know the response\n        // should be cached; see https://github.com/GoogleChrome/workbox/issues/2737\n        const wasCached = await handler.cachePut(request, response.clone());\n        if (!wasCached) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * This method is complex, as there a number of things to account for:\n     *\n     * The `plugins` array can be set at construction, and/or it might be added to\n     * to at any time before the strategy is used.\n     *\n     * At the time the strategy is used (i.e. during an `install` event), there\n     * needs to be at least one plugin that implements `cacheWillUpdate` in the\n     * array, other than `copyRedirectedCacheableResponsesPlugin`.\n     *\n     * - If this method is called and there are no suitable `cacheWillUpdate`\n     * plugins, we need to add `defaultPrecacheCacheabilityPlugin`.\n     *\n     * - If this method is called and there is exactly one `cacheWillUpdate`, then\n     * we don't have to do anything (this might be a previously added\n     * `defaultPrecacheCacheabilityPlugin`, or it might be a custom plugin).\n     *\n     * - If this method is called and there is more than one `cacheWillUpdate`,\n     * then we need to check if one is `defaultPrecacheCacheabilityPlugin`. If so,\n     * we need to remove it. (This situation is unlikely, but it could happen if\n     * the strategy is used multiple times, the first without a `cacheWillUpdate`,\n     * and then later on after manually adding a custom `cacheWillUpdate`.)\n     *\n     * See https://github.com/GoogleChrome/workbox/issues/2737 for more context.\n     *\n     * @private\n     */\n    _useDefaultCacheabilityPluginIfNeeded() {\n        let defaultPluginIndex = null;\n        let cacheWillUpdatePluginCount = 0;\n        for (const [index, plugin] of this.plugins.entries()) {\n            // Ignore the copy redirected plugin when determining what to do.\n            if (plugin === PrecacheStrategy.copyRedirectedCacheableResponsesPlugin) {\n                continue;\n            }\n            // Save the default plugin's index, in case it needs to be removed.\n            if (plugin === PrecacheStrategy.defaultPrecacheCacheabilityPlugin) {\n                defaultPluginIndex = index;\n            }\n            if (plugin.cacheWillUpdate) {\n                cacheWillUpdatePluginCount++;\n            }\n        }\n        if (cacheWillUpdatePluginCount === 0) {\n            this.plugins.push(PrecacheStrategy.defaultPrecacheCacheabilityPlugin);\n        }\n        else if (cacheWillUpdatePluginCount > 1 && defaultPluginIndex !== null) {\n            // Only remove the default plugin; multiple custom plugins are allowed.\n            this.plugins.splice(defaultPluginIndex, 1);\n        }\n        // Nothing needs to be done if cacheWillUpdatePluginCount is 1\n    }\n}\nPrecacheStrategy.defaultPrecacheCacheabilityPlugin = {\n    async cacheWillUpdate({ response }) {\n        if (!response || response.status >= 400) {\n            return null;\n        }\n        return response;\n    },\n};\nPrecacheStrategy.copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    },\n};\nexport { PrecacheStrategy };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true, } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = typeof entry !== 'string' && entry.revision ? 'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * @param {string} url A cache key whose SRI you want to look up.\n     * @return {string} The subresource integrity associated with the cache key,\n     * or undefined if it's not set.\n     */\n    getIntegrityForCacheKey(cacheKey) {\n        return this._cacheKeysToIntegrities.get(cacheKey);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = Object.assign({ cacheKey }, options.params);\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { Route } from 'workbox-routing/Route.js';\nimport { generateURLVariations } from './utils/generateURLVariations.js';\nimport './_version.js';\n/**\n * A subclass of {@link workbox-routing.Route} that takes a\n * {@link workbox-precaching.PrecacheController}\n * instance and uses it to match incoming requests and handle fetching\n * responses from the precache.\n *\n * @memberof workbox-precaching\n * @extends workbox-routing.Route\n */\nclass PrecacheRoute extends Route {\n    /**\n     * @param {PrecacheController} precacheController A `PrecacheController`\n     * instance used to both match requests and respond to fetch events.\n     * @param {Object} [options] Options to control how requests are matched\n     * against the list of precached URLs.\n     * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n     * check cache entries for a URLs ending with '/' to see if there is a hit when\n     * appending the `directoryIndex` value.\n     * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/, /^fbclid$/]] An\n     * array of regex's to remove search params when looking for a cache match.\n     * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n     * check the cache for the URL with a `.html` added to the end of the end.\n     * @param {workbox-precaching~urlManipulation} [options.urlManipulation]\n     * This is a function that should take a URL and return an array of\n     * alternative URLs that should be checked for precache matches.\n     */\n    constructor(precacheController, options) {\n        const match = ({ request, }) => {\n            const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n            for (const possibleURL of generateURLVariations(request.url, options)) {\n                const cacheKey = urlsToCacheKeys.get(possibleURL);\n                if (cacheKey) {\n                    const integrity = precacheController.getIntegrityForCacheKey(cacheKey);\n                    return { cacheKey, integrity };\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` + getFriendlyURL(request.url));\n            }\n            return;\n        };\n        super(match, precacheController.strategy);\n    }\n}\nexport { PrecacheRoute };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport './_version.js';\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options] See the {@link workbox-precaching.PrecacheRoute}\n * options.\n *\n * @memberof workbox-precaching\n */\nfunction addRoute(options) {\n    const precacheController = getOrCreatePrecacheController();\n    const precacheRoute = new PrecacheRoute(precacheController, options);\n    registerRoute(precacheRoute);\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * {@link workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * {@link workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.precache(entries);\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * {@link workbox-precaching.precache} and\n * {@link workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See the\n * {@link workbox-precaching.PrecacheRoute} options.\n *\n * @memberof workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * NavigationRoute makes it easy to create a\n * {@link workbox-routing.Route} that matches for browser\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\n *\n * It will only match incoming Requests whose\n * {@link https://fetch.spec.whatwg.org/#concept-request-mode|mode}\n * is set to `navigate`.\n *\n * You can optionally only apply this route to a subset of navigation requests\n * by using one or both of the `denylist` and `allowlist` parameters.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass NavigationRoute extends Route {\n    /**\n     * If both `denylist` and `allowlist` are provided, the `denylist` will\n     * take precedence and the request will not match this route.\n     *\n     * The regular expressions in `allowlist` and `denylist`\n     * are matched against the concatenated\n     * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\n     * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\n     * portions of the requested URL.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {Object} options\n     * @param {Array<RegExp>} [options.denylist] If any of these patterns match,\n     * the route will not handle the request (even if a allowlist RegExp matches).\n     * @param {Array<RegExp>} [options.allowlist=[/./]] If any of these patterns\n     * match the URL's pathname and search parameter, the route will handle the\n     * request (assuming the denylist doesn't match).\n     */\n    constructor(handler, { allowlist = [/./], denylist = [] } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArrayOfClass(allowlist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.allowlist',\n            });\n            assert.isArrayOfClass(denylist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.denylist',\n            });\n        }\n        super((options) => this._match(options), handler);\n        this._allowlist = allowlist;\n        this._denylist = denylist;\n    }\n    /**\n     * Routes match handler.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request\n     * @return {boolean}\n     *\n     * @private\n     */\n    _match({ url, request }) {\n        if (request && request.mode !== 'navigate') {\n            return false;\n        }\n        const pathnameAndSearch = url.pathname + url.search;\n        for (const regExp of this._denylist) {\n            if (regExp.test(pathnameAndSearch)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                        `being used, since the URL matches this denylist pattern: ` +\n                        `${regExp.toString()}`);\n                }\n                return false;\n            }\n        }\n        if (this._allowlist.some((regExp) => regExp.test(pathnameAndSearch))) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`The navigation route ${pathnameAndSearch} ` + `is being used.`);\n            }\n            return true;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                `being used, since the URL being navigated to doesn't ` +\n                `match the allowlist.`);\n        }\n        return false;\n    }\n}\nexport { NavigationRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandlerBoundToURL} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandlerBoundToURL} on that instance,\n * instead of using this function.\n *\n * @param {string} url The precached URL which will be used to lookup the\n * `Response`.\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {workbox-routing~handlerCallback}\n *\n * @memberof workbox-precaching\n */\nfunction createHandlerBoundToURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.createHandlerBoundToURL(url);\n}\nexport { createHandlerBoundToURL };\n"],"names":["self","_","e","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","classNameStr","expectedClassName","isReturnValueProblem","expectedMethod","entry","firstEntry","secondEntry","thrownErrorMessage","cacheNameId","name","methodName","expectedClass","normalizedRangeHeader","size","start","end","url","message","status","cacheName","origin","type","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","defaultMethod","validMethods","normalizeHandler","handler","assert","handle","Route","match","setCatchHandler","catchHandler","RegExpRoute","regExp","RegExp","result","exec","href","location","index","toString","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","debugMessages","push","has","get","forEach","msg","err","reject","_catchHandler","catch","catchErr","matchResult","length","undefined","setDefaultHandler","set","registerRoute","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","dontWaitFor","promise","quotaErrorCallbacks","Set","registerQuotaErrorCallback","callback","add","instanceOfAny","constructors","some","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","prototype","advance","continue","continuePrimaryKey","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","resolve","unlisten","removeEventListener","success","wrap","cacheDonePromiseForTransaction","tx","done","complete","DOMException","idbProxyTraps","target","prop","receiver","objectStoreNames","objectStore","replaceTraps","wrapFunction","func","transaction","storeNames","call","unwrap","sort","apply","transformCachableValue","Proxy","IDBRequest","newValue","openDB","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","oldVersion","newVersion","db","deleteDB","deleteDatabase","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","store","shift","oldTraps","DB_NAME","CACHE_OBJECT_STORE","normalizeURL","unNormalizedUrl","hash","CacheTimestampsModel","_db","_cacheName","_upgradeDb","objStore","createObjectStore","keyPath","createIndex","unique","_upgradeDbAndDeleteOldDbs","setTimestamp","timestamp","id","_getId","getDb","durability","put","getTimestamp","expireEntries","minTimestamp","maxCount","cursor","openCursor","entriesToDelete","entriesNotDeletedCount","urlsDeleted","delete","bind","CacheExpiration","config","_isRunning","_rerunRequested","maxEntries","maxAgeSeconds","_maxEntries","_maxAgeSeconds","_matchOptions","matchOptions","_timestampModel","Date","now","urlsExpired","cache","caches","updateTimestamp","isURLExpired","expireOlderThan","Infinity","ExpirationPlugin","cachedResponseWillBeUsed","cachedResponse","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","headers","dateHeader","parsedDate","headerTime","getTime","isNaN","DB_VERSION","REQUEST_OBJECT_STORE_NAME","QUEUE_NAME_INDEX","QueueDb","addEntry","getFirstEntryId","getAllEntriesByQueueName","queueName","results","getAllFromIndex","IDBKeyRange","only","getEntryCountByQueueName","countFromIndex","deleteEntry","getFirstEntryByQueueName","getEndEntryFromIndex","getLastEntryByQueueName","query","direction","contains","deleteObjectStore","autoIncrement","QueueStore","_queueName","_queueDb","pushEntry","requestData","unshiftEntry","firstId","popEntry","_removeEntry","shiftEntry","getAll","serializableProperties","StorableRequest","_requestData","fromRequest","body","clone","arrayBuffer","entries","toObject","assign","toRequest","TAG_PREFIX","MAX_RETENTION_TIME","queueNames","convertEntry","queueStoreEntry","queueEntry","metadata","Queue","forceSyncFallback","onSync","maxRetentionTime","_syncInProgress","_requestsAddedDuringSync","_name","_onSync","replayRequests","_maxRetentionTime","_forceSyncFallback","Boolean","_queueStore","_addSyncListener","pushRequest","_addRequest","unshiftRequest","popRequest","_removeRequest","shiftRequest","allEntries","unexpiredEntries","maxRetentionTimeInMs","operation","storableRequest","registerSync","fetch","sync","register","tag","syncComplete","syncError","queue","lastChance","_queueNames","BackgroundSyncPlugin","options","fetchDidFail","_queue","CacheableResponse","statuses","_statuses","_headers","isResponseCacheable","response","Response","cacheable","headerName","logFriendlyHeaders","CacheableResponsePlugin","cacheWillUpdate","_cacheableResponse","timeout","ms","setTimeout","MAX_RETRY_TIME","resultingClientExists","resultingClientId","existingWindows","clients","matchAll","existingWindowIds","w","resultingWindow","startTime","performance","find","responsesAreSame","firstResponse","secondResponse","headersToCheck","atLeastOneHeaderAvailable","header","every","headerStateComparison","headerValueComparison","CACHE_UPDATED_MESSAGE_TYPE","CACHE_UPDATED_MESSAGE_META","NOTIFY_ALL_CLIENTS","DEFAULT_HEADERS_TO_CHECK","isSafari","defaultPayloadGenerator","updatedURL","BroadcastCacheUpdate","generatePayload","notifyAllClients","_headersToCheck","_generatePayload","_notifyAllClients","notifyIfUpdated","newResponse","oldResponse","messageData","meta","mode","FetchEvent","resultingWin","windows","win","client","clientId","BroadcastUpdatePlugin","_broadcastUpdate","stripParams","fullURL","ignoreParams","strippedURL","param","searchParams","cacheMatchIgnoreParams","strippedRequestURL","keysOptions","ignoreSearch","cacheKeys","cacheKey","strippedCacheKeyURL","Deferred","executeQuotaErrorCallbacks","input","StrategyHandler","strategy","_cacheKeys","ExtendableEvent","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","preloadResponse","possiblePreloadResponse","originalRequest","hasCallback","cb","iterateCallbacks","pluginFilteredRequest","fetchResponse","fetchOptions","runCallbacks","fetchAndCachePut","responseClone","cachePut","cacheMatch","effectiveRequest","getCacheKey","multiMatchOptions","vary","responseToCache","_ensureResponseSafeToCache","hasCacheUpdateCallback","state","statefulCallback","statefulParam","doneWaiting","destroy","pluginsUsed","Strategy","responseDone","handleAll","_getResponse","handlerDone","_awaitComplete","_handle","waitUntilError","strategyStart","strategyName","printFinalResponse","CacheFirst","logs","isSupported","navigationPreload","enable","headerValue","setHeaderValue","clientsClaim","claim","asyncFn","returnPromise","REVISION_SEARCH_PARAM","createCacheKey","urlObject","revision","cacheKeyURL","originalURL","PrecacheInstallReportPlugin","updatedURLs","notUpdatedURLs","handlerWillStart","PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","_precacheController","getCacheKeyForURL","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","supportStatus","canConstructResponseFromBodyStream","testResponse","copyResponse","modifier","responseURL","clonedResponse","responseInit","Headers","statusText","modifiedResponseInit","blob","PrecacheStrategy","_fallbackToNetwork","fallbackToNetwork","copyRedirectedCacheableResponsesPlugin","_handleInstall","_handleFetch","integrityInManifest","integrity","integrityInRequest","noIntegrityConflict","_useDefaultCacheabilityPluginIfNeeded","wasCached","defaultPluginIndex","cacheWillUpdatePluginCount","defaultPrecacheCacheabilityPlugin","redirected","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","install","activate","addToCacheList","_installAndActiveListenersAdded","urlsToWarnAbout","cacheMode","warningMessage","installReportPlugin","credentials","currentlyCachedRequests","expectedCacheKeys","values","getURLsToCacheKeys","getCachedURLs","getIntegrityForCacheKey","matchPrecache","createHandlerBoundToURL","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","urlWithoutIgnoredParams","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","PrecacheRoute","urlsToCacheKeys","possibleURL","addRoute","precacheRoute","precacheAndRoute","NavigationRoute","allowlist","denylist","_match","_allowlist","_denylist","pathnameAndSearch","search"],"mappings":"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"}
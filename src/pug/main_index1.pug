doctype html
html(lang='ru')
  head
    include includes/headmeta
  body
    include includes/header
    main(role='main')
      article
        section
          .main_header
            h1 Где статья?
          .archlabel
            a(href='#')
              p программирование
            time 28/12/2022
          .headerquote
            blockquote(cite="https://books.google.ru/books?id=cwlrBgAAQBAJ&pg=PT116&lpg=PT116&dq=%D0%9E%D1%88%D0%B8%D0%B1%D0%BA%D0%B0+%D0%B8%D1%85+%D0%B2+%D1%82%D0%BE%D0%BC,+%D1%87%D1%82%D0%BE+%D0%BE%D0%BD%D0%B8+%D0%B8%D1%81%D0%BA%D0%B0%D0%BB%D0%B8+%D1%82%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE+%D0%B7%D0%BE%D0%BB%D0%BE%D1%82%D0%BE.+%D0%9E%D0%BD%D0%B8+%D0%B8%D1%81%D0%BA%D0%B0%D0%BB%D0%B8+%D1%81%D0%BE%D0%BA%D1%80%D0%BE%D0%B2%D0%B8%D1%89%D0%B0,+%D1%81%D0%BF%D1%80%D1%8F%D1%82%D0%B0%D0%BD%D0%BD%D1%8B%D0%B5+%D0%BD%D0%B0+%D0%9F%D1%83%D1%82%D0%B8,+%D0%B0+%D1%81%D0%B0%D0%BC+%D0%9F%D1%83%D1%82%D1%8C+%D0%B8%D1%85+%D0%BD%D0%B5+%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B5%D1%81%D0%BE%D0%B2%D0%B0%D0%BB.&source=bl&ots=KABfcLYEfW&sig=ACfU3U2Tbr-CgR91r4H0oKCSXEFQ3qHvYg&hl=en&sa=X&ved=2ahUKEwj1yqucp5j8AhUEAxAIHSyxAZwQ6AF6BAgDEAM#v=onepage&q=%D0%9E%D1%88%D0%B8%D0%B1%D0%BA%D0%B0%20%D0%B8%D1%85%20%D0%B2%20%D1%82%D0%BE%D0%BC%2C%20%D1%87%D1%82%D0%BE%20%D0%BE%D0%BD%D0%B8%20%D0%B8%D1%81%D0%BA%D0%B0%D0%BB%D0%B8%20%D1%82%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D0%B7%D0%BE%D0%BB%D0%BE%D1%82%D0%BE.%20%D0%9E%D0%BD%D0%B8%20%D0%B8%D1%81%D0%BA%D0%B0%D0%BB%D0%B8%20%D1%81%D0%BE%D0%BA%D1%80%D0%BE%D0%B2%D0%B8%D1%89%D0%B0%2C%20%D1%81%D0%BF%D1%80%D1%8F%D1%82%D0%B0%D0%BD%D0%BD%D1%8B%D0%B5%20%D0%BD%D0%B0%20%D0%9F%D1%83%D1%82%D0%B8%2C%20%D0%B0%20%D1%81%D0%B0%D0%BC%20%D0%9F%D1%83%D1%82%D1%8C%20%D0%B8%D1%85%20%D0%BD%D0%B5%20%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B5%D1%81%D0%BE%D0%B2%D0%B0%D0%BB.&f=false") Ошибка их в том, что они искали только золото. Они искали сокровища, спрятанные на Пути, а сам Путь их не интересовал.
            cite Пауло Коэльо
          .main_text
            p Куда же я пропал? Статья сама себя не напишет. Так что вот вам обзор всех напрограммированных багов и не очень (не очень багов).
            p Начнем с момента последних коммитов в репозиторий.
            p Осенью 2020 я думал, что смогу выпускать по 2 статьи в неделю, но не пошло. Не смог быстро (в течение нескольких месяцев) разобрать тот хаос технологий, который использовался на рынке разработки ПО (и используется по сей день). Дальше случается жизнь, кувырок через голову, разбор падений и полетов.(пожалуй надо рисуночек или фото или гиф, или все и сразу вот держите мем).
            p Осень 2021 - сначала заново собрал в кучу все, что из себя представляет современное приложение. По roadmap из интернета было видно, что за какие процессы отвечает, требовалось про каждый прочитать. Разбор одного инструмента разработки будто бы стирал знания о другом инструменте. (Фото роудмапа нарисованное шуточное типа мем)
            p Стала мешать катастрофическая нехватка практики. В принципе, остановившись на некотором уровне понимания, я перешел к практике. Грушей для битья стал это блог (он ей быть и не перестанет конечно же).
            h4 В предыдущих сериях:
            p (можно накатать картинку типа мем или просто красиво написать)
            .images_center
              img(src='/img/wtf.jpg', alt='wtf')
            h2 Невнимательность
            p При настройке локальных окружений в начале 2022 всплыла проблема с тестом на телефоне и доступом по внешнему ip к локальному сайту. Так как я пользуюсь локальным веб сервером для разработки, а не хостингом. На хостинг отправляются уже подготовленные изменения. Кто то скажет что это овершутинг. А я скажу, что мне интересно было реализовать более менее полный пайплайн и поменьше говнокодить.
            p Крайне неэффективно, в рамках трех дней и 14 часов рабочего времени я решил эту задачу.
            h4 Далее следует цитата из телеграмма:
            p Я в 2021 году настроил локальный nginx в качестве практики для работы с конфигами и всем подобным. Спустя несколько месяцев, я снова сел за программирование. Я забыл, что порты закрыты. И был очень удивлен, когда не увидел на телефоне страницу сайта после выполнения команды webpack serve.
            p Чего я только не пробовал. В дело пошел port forwarding и куча других бесполезных вещей. Пока я не проверил сборку на другой машине в сети понимания не возникало. После проверки на другом компьютере я отмел все вопросы с маршрутизатором и приступил к настройке своей машины.
            p Сначала я проверил и вырубил все sites-enabled в nginx (т.е просто стер нахер).
            p Ничего.
            p Потом я проверил и сделал все, что нужно и ненужно в файле etc/hosts (так же стер и восстановил обратно).
            p Снова мимо.
            p В итоге подумав, а как вообще я ставил nginx, и зная о проблемах с firewall в windows я пошел думать в эту сторону.
            p В консоли набрал:
            p sudo ufw status
            p Никаких открытых 8080 и 3000 портов, которые нужны веб серверу. БИНГО!
            p Стоит ли праздновать этот факап? КОНЕЧНО! КРУЖКУ ЛУЧШЕГО ДЕРЬМОВОГО КОФЕ ЭТОМУ ГОСПОДИНУ.
            p (Рисунок энека с кофе убитого под утро программированием)
            p Мораль сей басни такова - не стоит каждый раз рвать процесс обучения посередине.
            p И записывать надо, записывать.
            p Кстати, правится все довольно просто, надо открыть эти порты в UFW:
            p Как видите, надо просто написать ufw allow 3000/tcp и 8080/tcp. Можно так же открыть любой другой нужный порт ufw allow &lt;port&gt;/&lt;protocol&gt;. Более подробно можно прочитать в руководстве к UFW.
            h2 Service Worker
            p Я решил, что не хочу больше как крестьянин ручками описывать service worker. Плюс была нужна возможность более точно описывать поведение service worker, делая изменения на лету.
            p В результате потратив месяц, без особого рвения я таки решил этот вопрос для себя и своей сборки.
            p В начале я узнал, что можно использовать разные инструменты сборки:
            p (Надо что то в духе списка)
            ul
              li workbox - CLI (который работает как обертка над модулем npm);
              li workbox-build npm package;
              li Встроенные в фреймворки инструменты;
            p Первое, что меня заинтересовало - это вебпак. Из за которого, кстати, я так запарился с настройкой локального веб сервера. Все дело в том, что изначально моя сборка поднимает gulp browserSync сервер, который по сути простой http сервер.
            p (картинка как выглядит окно терминала с browserSync сейчас)
            p Но в вебпаке не было browserSync, которым я пользовался. При попытке загрузки страницы с телефона, никакого результата не увидел. Я решил, что проблема не открывающегося приложения в external ip - webpack (то есть в его веб сервере). Но проблема изначально была в nginx. Поправив конфигурацию nginx и снова запустив watch сервер, я получил ошибку связанную с workbox.
            p (где-то здесь надо вставить картинку негодования и ярости)
            p (и окно терминала с ошибкой)
            p Пришлось искать решение проблемы исходя из текущих технологий проекта, не пытаясь полностью перелезть на новые инструменты (webpack). Я решил использовать workbox-build внутри gulp файла, без дополнительных плагинов. Помогло случайно найденное в интернете решение, которое навело меня на нужные мысли. А ведь workbox-build самостоятельный npm пакет, который работает в общем node.js пространстве (спасибо скринкасту по node.js). Может все заработает из коробки? И действительно, зареквайерив (опять забыл как правильно называется такой способ импорта, надо будет проверить и записать, а то что как лох) модуль и создав задачу с методом workbox_build.generateSW - все заработало.
            p (описание с помощью блока кода который есть на сайте с помощью code rel)
            p (фото окна с результатом precached service worker)
            p По сути, методом тыка была решена боль, которая толком нигде не описана. О причинах скудных гайдов и подобных проблем я рассказываю в самостоятельной статье по данному вопросу. (ссылка на полную статью по данной фиче)
            h2 SVG и Анимасьон
            p Была у меня проблема использования SVG. Выражалась она в моем нежелании подробно разбирать SVG.
            p Во-первых я использовал SVG на странице 404.
            p Во-вторых я никогда и ни за что не прикасался к анимации. Так как в вебе дело это муторное, неблагодарное, и вообще ужас.
            p Первый вопрос я решил, настроив позиционирование картинки.
            p (примерное фото как было как стало)
            p С одной стороны теперь у меня один файл вместо многих на разные размеры экрана. C другой стороны, писать текст и включать ссылки в разметку SVG я не захотел (на деле не все заработало как надо).
            p Вторым пунктом была анимация. Сначала я узнал про smil формат svg. Он по сути "заключал" внутри svg кода все ключевые кадры анимации. Сначала я попробовал сам и ничего не заработало. Затем по статье с хабрахабра и еще паре замечаний из других блогов что-то "как-то" начало двигаться. Проблема была в том, что двигалось все "как-то"
            p (фото как это выглядело когда только задвигалось, там был энэк который переключал 2 конечных состояния, с открытым ртом и без открытого рта)
            p После я узнал, что в векторных программах обязательно надо перетаскивать те же точки, что ты создал, чтобы код был примерно одинаковый. Ведь вся проблема моего случая анимации была в морфинге формы. Морфинг перестает работать правильно, если точек не одинаковое количество в разных состояниях. И работает криво, если одна точка подменяется другой.
            p (пример неправильной работы с переворотом рта)
            p Так же была проблемка с паразитным отступом внутри вставленного в страницу кода svg. Оказалось, что если не выровнять кривую по центру листа (горизонтально и вертикально). То результат будет с отступом, причем с непонятной стороны. Я работаю в FIGMA и там это вообще было бедой, так как я пытался избавиться от проблемы кучей способов битый час, пока не увидел, что от разного положения картинок в пространстве листа меняется ссаный отступ. Радости небыло предела когда он исчез с глаз моих долой.
            p (фото как было как стало, если получится воспроизвести баг)
            p Подробнее о том, что такое SVG SMIL и что потребуется делать для правильного морфинга формы я описал в своей статье. (ссылка на полную статью по данной фиче)
            h2 Сворачивание текста под заголовком
            p Из новых фич была добавлена функциональность сворачивания содержимого заголовка. Это очень удобно в случае когда пользователь не получает всю информацию в кучу, а принимает решение, что читать. Такое “живое оглавление”.
            h2 Темная тема
            p Была добавлена темная тема, с реализацией через текущую тему устройства - prefers-color-scheme: dark/light.
            p Сейчас пользователь не может самостоятельно выбрать какую тему ему использовать. Она выбирается автоматически согласно теме системы. Есть возможность реализовать переключатель светлой/темной темы. Но к сожалению, данному переключателю не нашлось места в текущем дизайне. Можете пройти по ссылке, если хотите реализовать подобный функционал (ссылка на полную статью по данной фиче с переключателями которые описывал Вадим Макеев)
            p Вот и все. Это пожалуй все приключения сайта за год. Наверное не должно так быть, чтобы блог обновлялся редко, и большую часть вращался на выключенном веб сервере. Но чтобы этого не происходило надо постоянно его вести. Потеряв темп, в какой-то момент я понял, что интереса к написанию статей особо нет, а поэтому и блог забросил в долгий ящик. Вернуться помогли, как ни странно, баги, проблемы и их решение. Точнее эйфория которую дарило решение этих багов.
            p Можете также ознакомиться с другими моими статьями. Пожалуй, в этом месяце это последние статьи на старом статическом “движке” (с оооооооооочень большой оговоркой).
    include includes/footer